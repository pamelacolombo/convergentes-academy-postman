{
	"info": {
		"_postman_id": "7d90eee1-f7b6-4079-a53c-be0dc7f963c6",
		"name": "Convergentes - Pamela",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27633104"
	},
	"item": [
		{
			"name": "Acess",
			"item": [
				{
					"name": "Config",
					"item": [
						{
							"name": "Login - Default",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.globals.set(\"Token\", JSON.parse(responseBody).token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"mail\": \"{{MailAdmin}}\",\r\n    \"password\": \"{{PasswordAdmin}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/login/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"login",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register - new user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"  pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify the full name\", function () {\r",
											"  pm.expect(pm.environment.get(\"FullName\")).to.eql(JSON.parse(responseBody).user.fullName);\r",
											"});\r",
											"\r",
											"pm.environment.set(\"IdUser\", JSON.parse(responseBody).user._id);\r",
											"\r",
											"pm.test(\"Check mail is true\", function(){\r",
											"    pm.expect(pm.environment.get(\"Email\")).to.eql(JSON.parse(responseBody).user.mail);\r",
											"});\r",
											"\r",
											"pm.test(\"Check cpf is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"CPFUser\")).to.eql(JSON.parse(responseBody).user.cpf)\r",
											"});\r",
											"\r",
											"pm.test(\"Check fullName is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"FullName\")).to.eql(JSON.parse(responseBody).user.fullName)\r",
											"});\r",
											"\r",
											"pm.test(\"Verify the message\", () => {\r",
											"   pm.environment.set(\"Message\", `Olá ${pm.environment.get(\"FullName\")} cadastro realizado com sucesso`)\r",
											"})\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"const names = ['Alice', 'Miguel', 'Sophia', 'Arthur', 'Helena', 'Bernardo', 'Valentina', 'Heitor', 'Laura', 'Davi', 'Isabella', 'Lorenzo', 'Manuela', 'Theo', 'Luiza', 'Pedro', 'Giovanna', 'Gabriel', 'Julia', 'Enzo', 'Maria', 'Luiza', 'Matheus', 'Lorena', 'Lucas', 'Beatriz', 'Benjamin', 'Maria', 'Eduarda', 'Nicolas', 'Lara', 'Guilherme', 'Mariana', 'Rafael', 'Larissa', 'Joaquim', 'Camila', 'Samuel', 'Isadora', 'Henrique', 'Antonia', 'Gustavo', 'Maria', 'Clara', 'Murilo', 'Isabelly', 'Felipe', 'Lavinia', 'Pietro', 'Maria'];\r",
											" \r",
											"const lastnames = ['Silva', 'Santos', 'Oliveira', 'Souza', 'Rodrigues', 'Almeida', 'Lima', 'Ferreira', 'Pereira', 'Carvalho', 'Ribeiro', 'Costa', 'Araujo', 'Martins', 'Fernandes', 'Rocha', 'Melo', 'Barbosa', 'Cardoso', 'Nascimento', 'Gomes', 'Lopes', 'Marques', 'Ramos', 'Cunha', 'Brito', 'Dias', 'Campos', 'Castro', 'Monteiro', 'Mendes', 'Sousa', 'Monteiro', 'Braga', 'Moura', 'Barros', 'Pinto', 'Correia', 'Teixeira', 'Machado', 'Andrade', 'Vieira', 'Saraiva', 'Lobo', 'Freitas', 'Leal', 'Reis', 'Carneiro'];\r",
											" \r",
											"const nameRandom = names[Math.floor(Math.random() * names.length)];\r",
											"const lastNameRandom = lastnames[Math.floor(Math.random() * lastnames.length)];\r",
											" \r",
											"pm.environment.set(\"FirstName\", pm.variables.replaceIn(nameRandom))\r",
											" \r",
											"pm.environment.set(\"LastName\", pm.variables.replaceIn(lastNameRandom))\r",
											" \r",
											"pm.environment.set(\"FullName\", \r",
											"    pm.variables.replaceIn(nameRandom + ' ' + lastNameRandom))\r",
											" \r",
											" \r",
											"pm.environment.set(\"Email\",  \r",
											"    pm.variables.replaceIn(nameRandom.toLowerCase() + lastNameRandom.toLowerCase() + '@convergentess.com.br'))\r",
											" \r",
											" \r",
											"function gerarSenha() {\r",
											"  const caracteres = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%\";\r",
											"  const comprimentoMinimo = 8;\r",
											"  const comprimentoMaximo = 12;\r",
											"  \r",
											"  let senhaArray = [];\r",
											"\r",
											"  senhaArray.push(caracteres[Math.floor(Math.random() * 26)]); // Caractere maiúsculo\r",
											"  senhaArray.push(caracteres[26 + Math.floor(Math.random() * 26)]); // Caractere minúsculo\r",
											"  senhaArray.push(caracteres[52 + Math.floor(Math.random() * 10)]); // Número\r",
											"  senhaArray.push(caracteres[62 + Math.floor(Math.random() * 4)]); // Caractere especial\r",
											"\r",
											"  const comprimentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\r",
											"\r",
											"  for (let i = 0; i < comprimentoRestante; i++) {\r",
											"    senhaArray.push(caracteres[Math.floor(Math.random() * caracteres.length)]);\r",
											"  }\r",
											"\r",
											"  return shuffleString(senhaArray.join(\"\"));\r",
											"}\r",
											"\r",
											"function shuffleString(string) {\r",
											"  return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
											"}\r",
											"\r",
											"pm.environment.set(\"Password\", gerarSenha());\r",
											" \r",
											" \r",
											"function cpf() {\r",
											"    const randomDigit = () => Math.floor(Math.random() * 10)\r",
											"    const cpfDigits = Array.from({length: 9 }, randomDigit)\r",
											" \r",
											"    let sum = 0\r",
											"    for (let i = 10; i > 1; i--) {\r",
											"        sum+= cpfDigits[10 - i ] * i\r",
											"    }\r",
											" \r",
											"    const firstVerifierDigits = (sum * 10) % 11\r",
											"    cpfDigits.push(firstVerifierDigits === 10 ? 0 : firstVerifierDigits)\r",
											" \r",
											"    sum = 0\r",
											"    for (let i = 11; i > 1; i--) {\r",
											"        sum += cpfDigits[11 - i] * i\r",
											"    }\r",
											" \r",
											"    const secondVerifierDigits = (sum * 10) % 11\r",
											"    cpfDigits.push(secondVerifierDigits === 10 ? 0 : secondVerifierDigits)\r",
											" \r",
											"    return cpfDigits.join('')\r",
											"}\r",
											"pm.environment.set(\"CPFUser\", cpf())"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": {{CPFUser}},\r\n  \"confirmPassword\": \"{{Password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Login - new user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify token is true\", function () {\r",
											"    pm.expect(JSON.parse(responseBody)).to.have.property(\"token\");\r",
											"});\r",
											"\r",
											"pm.environment.set(\"TokenUser\", JSON.parse(responseBody).token)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenUser}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"{{Password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Sucesso",
					"item": [
						{
							"name": "The full name field filled with 100 characters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const names = ['Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaac', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaad', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaae', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaf', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaag', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaah', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaai', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaj', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaak', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaal', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaam', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaan', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaao', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaap', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaq', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaar', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaas', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaat', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaau', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaav', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaw', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaax', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaay', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaz'];\r",
											" \r",
											"const lastnames = ['Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaac', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaad', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaae', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaf', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaag', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaah', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaai', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaj', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaak', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaal', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaam', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaan', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaao', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaap', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaq', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaar', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaas', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaat', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaau', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaav', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaw', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaax', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaay', 'Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaz'];\r",
											" \r",
											"const nameRandom = names[Math.floor(Math.random() * names.length)];\r",
											"const lastNameRandom = lastnames[Math.floor(Math.random() * lastnames.length)];\r",
											" \r",
											"pm.environment.set(\"FirstName\", pm.variables.replaceIn(nameRandom))\r",
											" \r",
											"pm.environment.set(\"LastName\", pm.variables.replaceIn(lastNameRandom))\r",
											" \r",
											"pm.environment.set(\"FullName100\", \r",
											"    pm.variables.replaceIn(nameRandom + ' ' + lastNameRandom))\r",
											" \r",
											" pm.environment.set(\"Email\",  \r",
											"    pm.variables.replaceIn(nameRandom.toLowerCase() + '@convergentes.com.br'))\r",
											" \r",
											" \r",
											"function cpf() {\r",
											"    const randomDigit = () => Math.floor(Math.random() * 10)\r",
											"    const cpfDigits = Array.from({length: 9 }, randomDigit)\r",
											" \r",
											"    let sum = 0\r",
											"    for (let i = 10; i > 1; i--) {\r",
											"        sum+= cpfDigits[10 - i ] * i\r",
											"    }\r",
											" \r",
											"    const firstVerifierDigits = (sum * 10) % 11\r",
											"    cpfDigits.push(firstVerifierDigits === 10 ? 0 : firstVerifierDigits)\r",
											" \r",
											"    sum = 0\r",
											"    for (let i = 11; i > 1; i--) {\r",
											"        sum += cpfDigits[11 - i] * i\r",
											"    }\r",
											" \r",
											"    const secondVerifierDigits = (sum * 10) % 11\r",
											"    cpfDigits.push(secondVerifierDigits === 10 ? 0 : secondVerifierDigits)\r",
											" \r",
											"    return cpfDigits.join('')\r",
											"}\r",
											"pm.environment.set(\"CPFUser\", cpf())"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenUser}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\":\"{{FullName100}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"1234@Test\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": {{CPFUser}},\r\n  \"confirmPassword\": \"1234@Test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "The e-mail field filled in with .COM format",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const names = ['Alice', 'Miguel', 'Sophia', 'Arthur', 'Helena', 'Bernardo', 'Valentina', 'Heitor', 'Laura', 'Davi', 'Isabella', 'Lorenzo', 'Manuela', 'Theo', 'Luiza', 'Pedro', 'Giovanna', 'Gabriel', 'Julia', 'Enzo', 'Maria', 'Luiza', 'Matheus', 'Lorena', 'Lucas', 'Beatriz', 'Benjamin', 'Maria', 'Eduarda', 'Nicolas', 'Lara', 'Guilherme', 'Mariana', 'Rafael', 'Larissa', 'Joaquim', 'Camila', 'Samuel', 'Isadora', 'Henrique', 'Antonia', 'Gustavo', 'Maria', 'Clara', 'Murilo', 'Isabelly', 'Felipe', 'Lavinia', 'Pietro', 'Maria'];\r",
											" \r",
											"const lastnames = ['Silva', 'Santos', 'Oliveira', 'Souza', 'Rodrigues', 'Almeida', 'Lima', 'Ferreira', 'Pereira', 'Carvalho', 'Ribeiro', 'Costa', 'Araujo', 'Martins', 'Fernandes', 'Rocha', 'Melo', 'Barbosa', 'Cardoso', 'Nascimento', 'Gomes', 'Lopes', 'Marques', 'Ramos', 'Cunha', 'Brito', 'Dias', 'Campos', 'Castro', 'Monteiro', 'Mendes', 'Sousa', 'Monteiro', 'Braga', 'Moura', 'Barros', 'Pinto', 'Correia', 'Teixeira', 'Machado', 'Andrade', 'Vieira', 'Saraiva', 'Lobo', 'Freitas', 'Leal', 'Reis', 'Carneiro'];\r",
											" \r",
											"const nameRandom = names[Math.floor(Math.random() * names.length)];\r",
											"const lastNameRandom = lastnames[Math.floor(Math.random() * lastnames.length)];\r",
											" \r",
											"pm.environment.set(\"FirstName\", pm.variables.replaceIn(nameRandom))\r",
											" \r",
											"pm.environment.set(\"LastName\", pm.variables.replaceIn(lastNameRandom))\r",
											" \r",
											"pm.environment.set(\"FullName\", \r",
											"    pm.variables.replaceIn(nameRandom + ' ' + lastNameRandom))\r",
											" \r",
											" \r",
											"pm.environment.set(\"Email.com\",  \r",
											"    pm.variables.replaceIn(nameRandom.toLowerCase() + lastNameRandom.toLowerCase() + '@convergentes.com'))\r",
											" \r",
											"\r",
											" \r",
											"function cpf() {\r",
											"    const randomDigit = () => Math.floor(Math.random() * 10)\r",
											"    const cpfDigits = Array.from({length: 9 }, randomDigit)\r",
											" \r",
											"    let sum = 0\r",
											"    for (let i = 10; i > 1; i--) {\r",
											"        sum+= cpfDigits[10 - i ] * i\r",
											"    }\r",
											" \r",
											"    const firstVerifierDigits = (sum * 10) % 11\r",
											"    cpfDigits.push(firstVerifierDigits === 10 ? 0 : firstVerifierDigits)\r",
											" \r",
											"    sum = 0\r",
											"    for (let i = 11; i > 1; i--) {\r",
											"        sum += cpfDigits[11 - i] * i\r",
											"    }\r",
											" \r",
											"    const secondVerifierDigits = (sum * 10) % 11\r",
											"    cpfDigits.push(secondVerifierDigits === 10 ? 0 : secondVerifierDigits)\r",
											" \r",
											"    return cpfDigits.join('')\r",
											"}\r",
											"pm.environment.set(\"CPFUser\", cpf())"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Email.com}}\",\r\n  \"password\": \"1234@Test\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": {{CPFUser}},\r\n  \"confirmPassword\": \"1234@Test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "The e-mail field filled in with .COM.ORG format",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const names = ['Alice', 'Miguel', 'Sophia', 'Arthur', 'Helena', 'Bernardo', 'Valentina', 'Heitor', 'Laura', 'Davi', 'Isabella', 'Lorenzo', 'Manuela', 'Theo', 'Luiza', 'Pedro', 'Giovanna', 'Gabriel', 'Julia', 'Enzo', 'Maria', 'Luiza', 'Matheus', 'Lorena', 'Lucas', 'Beatriz', 'Benjamin', 'Maria', 'Eduarda', 'Nicolas', 'Lara', 'Guilherme', 'Mariana', 'Rafael', 'Larissa', 'Joaquim', 'Camila', 'Samuel', 'Isadora', 'Henrique', 'Antonia', 'Gustavo', 'Maria', 'Clara', 'Murilo', 'Isabelly', 'Felipe', 'Lavinia', 'Pietro', 'Maria'];\r",
											" \r",
											"const lastnames = ['Silva', 'Santos', 'Oliveira', 'Souza', 'Rodrigues', 'Almeida', 'Lima', 'Ferreira', 'Pereira', 'Carvalho', 'Ribeiro', 'Costa', 'Araujo', 'Martins', 'Fernandes', 'Rocha', 'Melo', 'Barbosa', 'Cardoso', 'Nascimento', 'Gomes', 'Lopes', 'Marques', 'Ramos', 'Cunha', 'Brito', 'Dias', 'Campos', 'Castro', 'Monteiro', 'Mendes', 'Sousa', 'Monteiro', 'Braga', 'Moura', 'Barros', 'Pinto', 'Correia', 'Teixeira', 'Machado', 'Andrade', 'Vieira', 'Saraiva', 'Lobo', 'Freitas', 'Leal', 'Reis', 'Carneiro'];\r",
											" \r",
											"const nameRandom = names[Math.floor(Math.random() * names.length)];\r",
											"const lastNameRandom = lastnames[Math.floor(Math.random() * lastnames.length)];\r",
											" \r",
											"pm.environment.set(\"FirstName\", pm.variables.replaceIn(nameRandom))\r",
											" \r",
											"pm.environment.set(\"LastName\", pm.variables.replaceIn(lastNameRandom))\r",
											" \r",
											"pm.environment.set(\"FullName\", \r",
											"    pm.variables.replaceIn(nameRandom + ' ' + lastNameRandom))\r",
											" \r",
											" \r",
											"pm.environment.set(\"Email.org\",  \r",
											"    pm.variables.replaceIn(nameRandom.toLowerCase() + lastNameRandom.toLowerCase() + '@convergentes.com.org'))\r",
											" \r",
											"\r",
											" \r",
											"function cpf() {\r",
											"    const randomDigit = () => Math.floor(Math.random() * 10)\r",
											"    const cpfDigits = Array.from({length: 9 }, randomDigit)\r",
											" \r",
											"    let sum = 0\r",
											"    for (let i = 10; i > 1; i--) {\r",
											"        sum+= cpfDigits[10 - i ] * i\r",
											"    }\r",
											" \r",
											"    const firstVerifierDigits = (sum * 10) % 11\r",
											"    cpfDigits.push(firstVerifierDigits === 10 ? 0 : firstVerifierDigits)\r",
											" \r",
											"    sum = 0\r",
											"    for (let i = 11; i > 1; i--) {\r",
											"        sum += cpfDigits[11 - i] * i\r",
											"    }\r",
											" \r",
											"    const secondVerifierDigits = (sum * 10) % 11\r",
											"    cpfDigits.push(secondVerifierDigits === 10 ? 0 : secondVerifierDigits)\r",
											" \r",
											"    return cpfDigits.join('')\r",
											"}\r",
											"pm.environment.set(\"CPFUser\", cpf())"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Email.org}}\",\r\n  \"password\": \"1234@Test\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": {{CPFUser}},\r\n  \"confirmPassword\": \"1234@Test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "The e-mail field filled in with .COM.NET format",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const names = ['Alice', 'Miguel', 'Sophia', 'Arthur', 'Helena', 'Bernardo', 'Valentina', 'Heitor', 'Laura', 'Davi', 'Isabella', 'Lorenzo', 'Manuela', 'Theo', 'Luiza', 'Pedro', 'Giovanna', 'Gabriel', 'Julia', 'Enzo', 'Maria', 'Luiza', 'Matheus', 'Lorena', 'Lucas', 'Beatriz', 'Benjamin', 'Maria', 'Eduarda', 'Nicolas', 'Lara', 'Guilherme', 'Mariana', 'Rafael', 'Larissa', 'Joaquim', 'Camila', 'Samuel', 'Isadora', 'Henrique', 'Antonia', 'Gustavo', 'Maria', 'Clara', 'Murilo', 'Isabelly', 'Felipe', 'Lavinia', 'Pietro', 'Maria'];\r",
											" \r",
											"const lastnames = ['Silva', 'Santos', 'Oliveira', 'Souza', 'Rodrigues', 'Almeida', 'Lima', 'Ferreira', 'Pereira', 'Carvalho', 'Ribeiro', 'Costa', 'Araujo', 'Martins', 'Fernandes', 'Rocha', 'Melo', 'Barbosa', 'Cardoso', 'Nascimento', 'Gomes', 'Lopes', 'Marques', 'Ramos', 'Cunha', 'Brito', 'Dias', 'Campos', 'Castro', 'Monteiro', 'Mendes', 'Sousa', 'Monteiro', 'Braga', 'Moura', 'Barros', 'Pinto', 'Correia', 'Teixeira', 'Machado', 'Andrade', 'Vieira', 'Saraiva', 'Lobo', 'Freitas', 'Leal', 'Reis', 'Carneiro'];\r",
											" \r",
											"const nameRandom = names[Math.floor(Math.random() * names.length)];\r",
											"const lastNameRandom = lastnames[Math.floor(Math.random() * lastnames.length)];\r",
											" \r",
											"pm.environment.set(\"FirstName\", pm.variables.replaceIn(nameRandom))\r",
											" \r",
											"pm.environment.set(\"LastName\", pm.variables.replaceIn(lastNameRandom))\r",
											" \r",
											"pm.environment.set(\"FullName\", \r",
											"    pm.variables.replaceIn(nameRandom + ' ' + lastNameRandom))\r",
											" \r",
											" \r",
											"pm.environment.set(\"Email.net\",  \r",
											"    pm.variables.replaceIn(nameRandom.toLowerCase() + lastNameRandom.toLowerCase() + '@convergentes.com.net'))\r",
											" \r",
											"\r",
											" \r",
											"function cpf() {\r",
											"    const randomDigit = () => Math.floor(Math.random() * 10)\r",
											"    const cpfDigits = Array.from({length: 9 }, randomDigit)\r",
											" \r",
											"    let sum = 0\r",
											"    for (let i = 10; i > 1; i--) {\r",
											"        sum+= cpfDigits[10 - i ] * i\r",
											"    }\r",
											" \r",
											"    const firstVerifierDigits = (sum * 10) % 11\r",
											"    cpfDigits.push(firstVerifierDigits === 10 ? 0 : firstVerifierDigits)\r",
											" \r",
											"    sum = 0\r",
											"    for (let i = 11; i > 1; i--) {\r",
											"        sum += cpfDigits[11 - i] * i\r",
											"    }\r",
											" \r",
											"    const secondVerifierDigits = (sum * 10) % 11\r",
											"    cpfDigits.push(secondVerifierDigits === 10 ? 0 : secondVerifierDigits)\r",
											" \r",
											"    return cpfDigits.join('')\r",
											"}\r",
											"pm.environment.set(\"CPFUser\", cpf())"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Email.net}}\",\r\n  \"password\": \"1234@Test\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": {{CPFUser}},\r\n  \"confirmPassword\": \"1234@Test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "The password field filled in with 8 characters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify the message\", () => {\r",
											"   pm.environment.set(\"Message\", `Olá ${pm.environment.get(\"FullName\")} cadastro realizado com sucesso`)\r",
											"})\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"const names = ['Alice', 'Miguel', 'Sophia', 'Arthur', 'Helena', 'Bernardo', 'Valentina', 'Heitor', 'Laura', 'Davi', 'Isabella', 'Lorenzo', 'Manuela', 'Theo', 'Luiza', 'Pedro', 'Giovanna', 'Gabriel', 'Julia', 'Enzo', 'Maria', 'Luiza', 'Matheus', 'Lorena', 'Lucas', 'Beatriz', 'Benjamin', 'Maria', 'Eduarda', 'Nicolas', 'Lara', 'Guilherme', 'Mariana', 'Rafael', 'Larissa', 'Joaquim', 'Camila', 'Samuel', 'Isadora', 'Henrique', 'Antonia', 'Gustavo', 'Maria', 'Clara', 'Murilo', 'Isabelly', 'Felipe', 'Lavinia', 'Pietro', 'Maria'];\r",
											" \r",
											"const lastnames = ['Silva', 'Santos', 'Oliveira', 'Souza', 'Rodrigues', 'Almeida', 'Lima', 'Ferreira', 'Pereira', 'Carvalho', 'Ribeiro', 'Costa', 'Araujo', 'Martins', 'Fernandes', 'Rocha', 'Melo', 'Barbosa', 'Cardoso', 'Nascimento', 'Gomes', 'Lopes', 'Marques', 'Ramos', 'Cunha', 'Brito', 'Dias', 'Campos', 'Castro', 'Monteiro', 'Mendes', 'Sousa', 'Monteiro', 'Braga', 'Moura', 'Barros', 'Pinto', 'Correia', 'Teixeira', 'Machado', 'Andrade', 'Vieira', 'Saraiva', 'Lobo', 'Freitas', 'Leal', 'Reis', 'Carneiro'];\r",
											" \r",
											"const nameRandom = names[Math.floor(Math.random() * names.length)];\r",
											"const lastNameRandom = lastnames[Math.floor(Math.random() * lastnames.length)];\r",
											" \r",
											"pm.environment.set(\"FirstName\", pm.variables.replaceIn(nameRandom))\r",
											" \r",
											"pm.environment.set(\"LastName\", pm.variables.replaceIn(lastNameRandom))\r",
											" \r",
											"pm.environment.set(\"FullName\", \r",
											"    pm.variables.replaceIn(nameRandom + ' ' + lastNameRandom))\r",
											" \r",
											" \r",
											"pm.environment.set(\"Email\",  \r",
											"    pm.variables.replaceIn(nameRandom.toLowerCase() + lastNameRandom.toLowerCase() + '@convergentess.com.br'))\r",
											" \r",
											"function gerarSenha() {\r",
											"  const caracteres = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%\";\r",
											"  const comprimentoMinimo = 8;\r",
											"  const comprimentoMaximo = 8;\r",
											"  \r",
											"  let senhaArray = [];\r",
											"\r",
											"  senhaArray.push(caracteres[Math.floor(Math.random() * 26)]); // Caractere maiúsculo\r",
											"  senhaArray.push(caracteres[26 + Math.floor(Math.random() * 26)]); // Caractere minúsculo\r",
											"  senhaArray.push(caracteres[52 + Math.floor(Math.random() * 10)]); // Número\r",
											"  senhaArray.push(caracteres[62 + Math.floor(Math.random() * 4)]); // Caractere especial\r",
											"\r",
											"  const comprimentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\r",
											"\r",
											"  for (let i = 0; i < comprimentoRestante; i++) {\r",
											"    senhaArray.push(caracteres[Math.floor(Math.random() * caracteres.length)]);\r",
											"  }\r",
											"\r",
											"  return shuffleString(senhaArray.join(\"\"));\r",
											"}\r",
											"\r",
											"function shuffleString(string) {\r",
											"  return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
											"}\r",
											"\r",
											"pm.environment.set(\"Password8\", gerarSenha());\r",
											" \r",
											"function cpf() {\r",
											"    const randomDigit = () => Math.floor(Math.random() * 10)\r",
											"    const cpfDigits = Array.from({length: 9 }, randomDigit)\r",
											" \r",
											"    let sum = 0\r",
											"    for (let i = 10; i > 1; i--) {\r",
											"        sum+= cpfDigits[10 - i ] * i\r",
											"    }\r",
											" \r",
											"    const firstVerifierDigits = (sum * 10) % 11\r",
											"    cpfDigits.push(firstVerifierDigits === 10 ? 0 : firstVerifierDigits)\r",
											" \r",
											"    sum = 0\r",
											"    for (let i = 11; i > 1; i--) {\r",
											"        sum += cpfDigits[11 - i] * i\r",
											"    }\r",
											" \r",
											"    const secondVerifierDigits = (sum * 10) % 11\r",
											"    cpfDigits.push(secondVerifierDigits === 10 ? 0 : secondVerifierDigits)\r",
											" \r",
											"    return cpfDigits.join('')\r",
											"}\r",
											"pm.environment.set(\"CPFUser\", cpf())"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"{{Password8}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": {{CPFUser}},\r\n  \"confirmPassword\": \"{{Password8}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "The password field filled in with 12 characters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify the full name\", function () {\r",
											"  pm.expect(pm.environment.get(\"FullName\")).to.eql(JSON.parse(responseBody).user.fullName);\r",
											"});\r",
											"\r",
											"pm.test(\"Check mail is true\", function(){\r",
											"    pm.expect(pm.environment.get(\"Email\")).to.eql(JSON.parse(responseBody).user.mail);\r",
											"});\r",
											"\r",
											"pm.test(\"Check cpf is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"CPFUser\")).to.eql(JSON.parse(responseBody).user.cpf)\r",
											"});\r",
											"\r",
											"pm.test(\"Check fullName is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"FullName\")).to.eql(JSON.parse(responseBody).user.fullName)\r",
											"});\r",
											"\r",
											"pm.test(\"Verify the message\", () => {\r",
											"   pm.environment.set(\"Message\", `Olá ${pm.environment.get(\"FullName\")} cadastro realizado com sucesso`)\r",
											"})\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"const names = ['Alice', 'Miguel', 'Sophia', 'Arthur', 'Helena', 'Bernardo', 'Valentina', 'Heitor', 'Laura', 'Davi', 'Isabella', 'Lorenzo', 'Manuela', 'Theo', 'Luiza', 'Pedro', 'Giovanna', 'Gabriel', 'Julia', 'Enzo', 'Maria', 'Luiza', 'Matheus', 'Lorena', 'Lucas', 'Beatriz', 'Benjamin', 'Maria', 'Eduarda', 'Nicolas', 'Lara', 'Guilherme', 'Mariana', 'Rafael', 'Larissa', 'Joaquim', 'Camila', 'Samuel', 'Isadora', 'Henrique', 'Antonia', 'Gustavo', 'Maria', 'Clara', 'Murilo', 'Isabelly', 'Felipe', 'Lavinia', 'Pietro', 'Maria'];\r",
											" \r",
											"const lastnames = ['Silva', 'Santos', 'Oliveira', 'Souza', 'Rodrigues', 'Almeida', 'Lima', 'Ferreira', 'Pereira', 'Carvalho', 'Ribeiro', 'Costa', 'Araujo', 'Martins', 'Fernandes', 'Rocha', 'Melo', 'Barbosa', 'Cardoso', 'Nascimento', 'Gomes', 'Lopes', 'Marques', 'Ramos', 'Cunha', 'Brito', 'Dias', 'Campos', 'Castro', 'Monteiro', 'Mendes', 'Sousa', 'Monteiro', 'Braga', 'Moura', 'Barros', 'Pinto', 'Correia', 'Teixeira', 'Machado', 'Andrade', 'Vieira', 'Saraiva', 'Lobo', 'Freitas', 'Leal', 'Reis', 'Carneiro'];\r",
											" \r",
											"const nameRandom = names[Math.floor(Math.random() * names.length)];\r",
											"const lastNameRandom = lastnames[Math.floor(Math.random() * lastnames.length)];\r",
											" \r",
											"pm.environment.set(\"FirstName\", pm.variables.replaceIn(nameRandom))\r",
											" \r",
											"pm.environment.set(\"LastName\", pm.variables.replaceIn(lastNameRandom))\r",
											" \r",
											"pm.environment.set(\"FullName\", \r",
											"    pm.variables.replaceIn(nameRandom + ' ' + lastNameRandom))\r",
											" \r",
											" \r",
											"pm.environment.set(\"Email\",  \r",
											"    pm.variables.replaceIn(nameRandom.toLowerCase() + lastNameRandom.toLowerCase() + '@convergentess.com.br'))\r",
											" \r",
											"function gerarSenha() {\r",
											"  const caracteres = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%\";\r",
											"  const comprimentoMinimo = 12;\r",
											"  const comprimentoMaximo = 12;\r",
											"  \r",
											"  let senhaArray = [];\r",
											"\r",
											"  senhaArray.push(caracteres[Math.floor(Math.random() * 26)]); // Caractere maiúsculo\r",
											"  senhaArray.push(caracteres[26 + Math.floor(Math.random() * 26)]); // Caractere minúsculo\r",
											"  senhaArray.push(caracteres[52 + Math.floor(Math.random() * 10)]); // Número\r",
											"  senhaArray.push(caracteres[62 + Math.floor(Math.random() * 4)]); // Caractere especial\r",
											"\r",
											"  const comprimentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\r",
											"\r",
											"  for (let i = 0; i < comprimentoRestante; i++) {\r",
											"    senhaArray.push(caracteres[Math.floor(Math.random() * caracteres.length)]);\r",
											"  }\r",
											"\r",
											"  return shuffleString(senhaArray.join(\"\"));\r",
											"}\r",
											"\r",
											"function shuffleString(string) {\r",
											"  return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
											"}\r",
											"\r",
											"pm.environment.set(\"Password12\", gerarSenha());\r",
											"\r",
											"\r",
											"function cpf() {\r",
											"    const randomDigit = () => Math.floor(Math.random() * 10)\r",
											"    const cpfDigits = Array.from({length: 9 }, randomDigit)\r",
											" \r",
											"    let sum = 0\r",
											"    for (let i = 10; i > 1; i--) {\r",
											"        sum+= cpfDigits[10 - i ] * i\r",
											"    }\r",
											" \r",
											"    const firstVerifierDigits = (sum * 10) % 11\r",
											"    cpfDigits.push(firstVerifierDigits === 10 ? 0 : firstVerifierDigits)\r",
											" \r",
											"    sum = 0\r",
											"    for (let i = 11; i > 1; i--) {\r",
											"        sum += cpfDigits[11 - i] * i\r",
											"    }\r",
											" \r",
											"    const secondVerifierDigits = (sum * 10) % 11\r",
											"    cpfDigits.push(secondVerifierDigits === 10 ? 0 : secondVerifierDigits)\r",
											" \r",
											"    return cpfDigits.join('')\r",
											"}\r",
											"pm.environment.set(\"CPFUser\", cpf())"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"{{Password12}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": {{CPFUser}},\r\n  \"confirmPassword\": \"{{Password12}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a user's password by passing the ID - token user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Função para gerar uma senha aleatória\r",
											"function gerarSenha() {\r",
											"  const caracteres = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%\";\r",
											"  const comprimentoMinimo = 8;\r",
											"  const comprimentoMaximo = 12;\r",
											"  \r",
											"  let senhaArray = [];\r",
											"\r",
											"  // Garante pelo menos um caractere maiúsculo, minúsculo, número e especial\r",
											"  senhaArray.push(caracteres[Math.floor(Math.random() * 26)]); // Caractere maiúsculo\r",
											"  senhaArray.push(caracteres[26 + Math.floor(Math.random() * 26)]); // Caractere minúsculo\r",
											"  senhaArray.push(caracteres[52 + Math.floor(Math.random() * 10)]); // Número\r",
											"  senhaArray.push(caracteres[62 + Math.floor(Math.random() * 4)]); // Caractere especial\r",
											"\r",
											"  const comprimentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\r",
											"\r",
											"  for (let i = 0; i < comprimentoRestante; i++) {\r",
											"    senhaArray.push(caracteres[Math.floor(Math.random() * caracteres.length)]);\r",
											"  }\r",
											"\r",
											"  return shuffleString(senhaArray.join(\"\"));\r",
											"}\r",
											"\r",
											"// Função para embaralhar uma string\r",
											"function shuffleString(string) {\r",
											"  return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
											"}\r",
											"\r",
											"pm.environment.set(\"NewPassword\", gerarSenha());\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify the message\", function () {\r",
											"    pm.expect(pm.globals.get(\"MsgChangedPassword\")).to.eql(JSON.parse(responseBody).msg)\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenUser}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"password\": \"{{NewPassword}}\",\r\n    \"confirmPassword\": \"{{NewPassword}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/password/{{IdUser}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										"password",
										"{{IdUser}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a user's data by passing the ID - token user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenUser}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Email}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/{{IdUser}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										"{{IdUser}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a user's status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"status\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/status/{{IdUser}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										"status",
										"{{IdUser}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "User Validate Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenUser}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/validateToken",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"validateToken"
									]
								}
							},
							"response": []
						},
						{
							"name": "User ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/user/{{IdUser}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										"{{IdUser}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "User Count",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenUser}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/user/count",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										"count"
									]
								}
							},
							"response": []
						},
						{
							"name": "User Listing",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete - user id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/{{IdUser}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										"{{IdUser}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Falso Positivo",
					"item": [
						{
							"name": "Register - new user 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"  pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify the full name\", function () {\r",
											"  pm.expect(pm.environment.get(\"FullName\")).to.eql(JSON.parse(responseBody).user.fullName);\r",
											"});\r",
											"\r",
											"pm.environment.set(\"IdUser\", JSON.parse(responseBody).user._id);\r",
											"\r",
											"\r",
											"pm.test(\"Check mail is true\", function(){\r",
											"    pm.expect(pm.environment.get(\"Email\")).to.eql(JSON.parse(responseBody).user.mail);\r",
											"});\r",
											"\r",
											"pm.test(\"Check cpf is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"CPFUser\")).to.eql(JSON.parse(responseBody).user.cpf)\r",
											"});\r",
											"\r",
											"pm.test(\"Check fullName is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"FullName\")).to.eql(JSON.parse(responseBody).user.fullName)\r",
											"});\r",
											"\r",
											"pm.test(\"Verify the message\", () => {\r",
											"   pm.environment.set(\"Message\", `Olá ${pm.environment.get(\"FullName\")} cadastro realizado com sucesso`)\r",
											"})\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"const names = ['Alice', 'Miguel', 'Sophia', 'Arthur', 'Helena', 'Bernardo', 'Valentina', 'Heitor', 'Laura', 'Davi', 'Isabella', 'Lorenzo', 'Manuela', 'Theo', 'Luiza', 'Pedro', 'Giovanna', 'Gabriel', 'Julia', 'Enzo', 'Maria', 'Luiza', 'Matheus', 'Lorena', 'Lucas', 'Beatriz', 'Benjamin', 'Maria', 'Eduarda', 'Nicolas', 'Lara', 'Guilherme', 'Mariana', 'Rafael', 'Larissa', 'Joaquim', 'Camila', 'Samuel', 'Isadora', 'Henrique', 'Antonia', 'Gustavo', 'Maria', 'Clara', 'Murilo', 'Isabelly', 'Felipe', 'Lavinia', 'Pietro', 'Maria'];\r",
											" \r",
											"const lastnames = ['Silva', 'Santos', 'Oliveira', 'Souza', 'Rodrigues', 'Almeida', 'Lima', 'Ferreira', 'Pereira', 'Carvalho', 'Ribeiro', 'Costa', 'Araujo', 'Martins', 'Fernandes', 'Rocha', 'Melo', 'Barbosa', 'Cardoso', 'Nascimento', 'Gomes', 'Lopes', 'Marques', 'Ramos', 'Cunha', 'Brito', 'Dias', 'Campos', 'Castro', 'Monteiro', 'Mendes', 'Sousa', 'Monteiro', 'Braga', 'Moura', 'Barros', 'Pinto', 'Correia', 'Teixeira', 'Machado', 'Andrade', 'Vieira', 'Saraiva', 'Lobo', 'Freitas', 'Leal', 'Reis', 'Carneiro'];\r",
											" \r",
											"const nameRandom = names[Math.floor(Math.random() * names.length)];\r",
											"const lastNameRandom = lastnames[Math.floor(Math.random() * lastnames.length)];\r",
											" \r",
											"pm.environment.set(\"FirstName\", pm.variables.replaceIn(nameRandom))\r",
											" \r",
											"pm.environment.set(\"LastName\", pm.variables.replaceIn(lastNameRandom))\r",
											" \r",
											"pm.environment.set(\"FullName\", \r",
											"    pm.variables.replaceIn(nameRandom + ' ' + lastNameRandom))\r",
											" \r",
											" \r",
											"pm.environment.set(\"Email\",  \r",
											"    pm.variables.replaceIn(nameRandom.toLowerCase() + lastNameRandom.toLowerCase() + '@convergentess.com.br'))\r",
											" \r",
											" \r",
											"function gerarSenha() {\r",
											"  const caracteres = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%\";\r",
											"  const comprimentoMinimo = 8;\r",
											"  const comprimentoMaximo = 12;\r",
											"  \r",
											"  let senhaArray = [];\r",
											"\r",
											"  senhaArray.push(caracteres[Math.floor(Math.random() * 26)]); // Caractere maiúsculo\r",
											"  senhaArray.push(caracteres[26 + Math.floor(Math.random() * 26)]); // Caractere minúsculo\r",
											"  senhaArray.push(caracteres[52 + Math.floor(Math.random() * 10)]); // Número\r",
											"  senhaArray.push(caracteres[62 + Math.floor(Math.random() * 4)]); // Caractere especial\r",
											"\r",
											"  const comprimentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\r",
											"\r",
											"  for (let i = 0; i < comprimentoRestante; i++) {\r",
											"    senhaArray.push(caracteres[Math.floor(Math.random() * caracteres.length)]);\r",
											"  }\r",
											"\r",
											"  return shuffleString(senhaArray.join(\"\"));\r",
											"}\r",
											"\r",
											"function shuffleString(string) {\r",
											"  return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
											"}\r",
											"\r",
											"pm.environment.set(\"Password\", gerarSenha());\r",
											" \r",
											" \r",
											"function cpf() {\r",
											"    const randomDigit = () => Math.floor(Math.random() * 10)\r",
											"    const cpfDigits = Array.from({length: 9 }, randomDigit)\r",
											" \r",
											"    let sum = 0\r",
											"    for (let i = 10; i > 1; i--) {\r",
											"        sum+= cpfDigits[10 - i ] * i\r",
											"    }\r",
											" \r",
											"    const firstVerifierDigits = (sum * 10) % 11\r",
											"    cpfDigits.push(firstVerifierDigits === 10 ? 0 : firstVerifierDigits)\r",
											" \r",
											"    sum = 0\r",
											"    for (let i = 11; i > 1; i--) {\r",
											"        sum += cpfDigits[11 - i] * i\r",
											"    }\r",
											" \r",
											"    const secondVerifierDigits = (sum * 10) % 11\r",
											"    cpfDigits.push(secondVerifierDigits === 10 ? 0 : secondVerifierDigits)\r",
											" \r",
											"    return cpfDigits.join('')\r",
											"}\r",
											"pm.environment.set(\"CPFUser\", cpf())"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": {{CPFUser}},\r\n  \"confirmPassword\": \"{{Password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Login - new user 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify token is true\", function () {\r",
											"    pm.expect(JSON.parse(responseBody)).to.have.property(\"token\");\r",
											"});\r",
											"\r",
											"pm.environment.set(\"TokenUser\", JSON.parse(responseBody).token)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenUser}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"{{Password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Full name field without filling",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify the message\", function () {\r",
											"    pm.expect(pm.globals.get(\"MsgRequiredField\")).to.eql(JSON.parse(responseBody).error[0])\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenUser}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"1234@Test\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": {{CPFUser}},\r\n  \"confirmPassword\": \"1234@Test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "The full name field filled with 101 characters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify the message\", function () {\r",
											"    pm.expect(pm.globals.get(\"MsgMaximumCharacters\")).to.eql(JSON.parse(responseBody).error[0])\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"const nomes = [\"Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab, Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaac, Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaad,Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaae, Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaf, Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaag, Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaah, Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaai, Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaj, Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaak, Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaal,Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaam,Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaan,Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaao, Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaap,Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaq, Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaar, Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaas, Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaat, Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaau, Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaav, Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaw,Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaax Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaay,Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaz\"];\r",
											"\r",
											"\r",
											"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
											"\r",
											"pm.environment.set(\"FullName101\", pm.variables.replaceIn(nomeRandom))\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenUser}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\":\"Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"1234@Test\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": {{CPFUser}},\r\n  \"confirmPassword\": \"1234@Test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Full name field filled with special characters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"const caracteresEspeciais = \"!@#$%^*()_+{}:<>?~`-=[];',./\";\r",
											"let massaDeDados = \"\";\r",
											"for (let i = 0; i < 10; i++) {\r",
											"    massaDeDados += caracteresEspeciais.charAt(Math.floor(Math.random() * caracteresEspeciais.length));\r",
											"}\r",
											"\r",
											"pm.environment.set(\"FullNameEspecialCaractere\", massaDeDados);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullNameEspecialCaractere}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"1234@Test\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": {{CPFUser}},\r\n  \"confirmPassword\": \"1234@Test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Full name field filled with numbers",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"const nomes = [\"12523\", \"45546\", \"78689\", \"123456\", \"234567\", \"345678\", \"456789\", \"01234\", \"04321\", \"54321\", \"654114\", \"254263257\", \"025489\", \"365478\", \"2541365\", \"985471\", \"3254123\", \"8745985\", \"3254125\", \"032145698\", \"2541586\"];\r",
											"\r",
											"\r",
											"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
											"\r",
											"pm.environment.set(\"FullNameNumero\", pm.variables.replaceIn(nomeRandom))"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullNameNumero}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"1234@Test\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": {{CPFUser}},\r\n  \"confirmPassword\": \"1234@Test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Full Name field filled in Simple Name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"\r",
											"const names = ['Alice', 'Miguel', 'Sophia', 'Arthur', 'Helena', 'Bernardo', 'Valentina', 'Heitor', 'Laura', 'Davi', 'Isabella', 'Lorenzo', 'Manuela', 'Theo', 'Luiza', 'Pedro', 'Giovanna', 'Gabriel', 'Julia', 'Enzo', 'Maria', 'Luiza', 'Matheus', 'Lorena', 'Lucas', 'Beatriz', 'Benjamin', 'Maria', 'Eduarda', 'Nicolas', 'Lara', 'Guilherme', 'Mariana', 'Rafael', 'Larissa', 'Joaquim', 'Camila', 'Samuel', 'Isadora', 'Henrique', 'Antonia', 'Gustavo', 'Maria', 'Clara', 'Murilo', 'Isabelly', 'Felipe', 'Lavinia', 'Pietro', 'Maria'];\r",
											" \r",
											" \r",
											"const nameRandom = names[Math.floor(Math.random() * names.length)];\r",
											" \r",
											"pm.environment.set(\"SimpleName\", pm.variables.replaceIn(nameRandom))\r",
											"\r",
											"\r",
											" \r",
											"pm.environment.set(\"Email\",  \r",
											"    pm.variables.replaceIn(nameRandom.toLowerCase() + '@convergentess.com.br'))\r",
											" \r",
											" \r",
											"function gerarSenha() {\r",
											"  const caracteres = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%\";\r",
											"  const comprimentoMinimo = 8;\r",
											"  const comprimentoMaximo = 12;\r",
											"  \r",
											"  let senhaArray = [];\r",
											"\r",
											"  senhaArray.push(caracteres[Math.floor(Math.random() * 26)]); // Caractere maiúsculo\r",
											"  senhaArray.push(caracteres[26 + Math.floor(Math.random() * 26)]); // Caractere minúsculo\r",
											"  senhaArray.push(caracteres[52 + Math.floor(Math.random() * 10)]); // Número\r",
											"  senhaArray.push(caracteres[62 + Math.floor(Math.random() * 4)]); // Caractere especial\r",
											"\r",
											"  const comprimentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\r",
											"\r",
											"  for (let i = 0; i < comprimentoRestante; i++) {\r",
											"    senhaArray.push(caracteres[Math.floor(Math.random() * caracteres.length)]);\r",
											"  }\r",
											"\r",
											"  return shuffleString(senhaArray.join(\"\"));\r",
											"}\r",
											"\r",
											"function shuffleString(string) {\r",
											"  return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
											"}\r",
											"\r",
											"pm.environment.set(\"Password\", gerarSenha());\r",
											" \r",
											" \r",
											"function cpf() {\r",
											"    const randomDigit = () => Math.floor(Math.random() * 10)\r",
											"    const cpfDigits = Array.from({length: 9 }, randomDigit)\r",
											" \r",
											"    let sum = 0\r",
											"    for (let i = 10; i > 1; i--) {\r",
											"        sum+= cpfDigits[10 - i ] * i\r",
											"    }\r",
											" \r",
											"    const firstVerifierDigits = (sum * 10) % 11\r",
											"    cpfDigits.push(firstVerifierDigits === 10 ? 0 : firstVerifierDigits)\r",
											" \r",
											"    sum = 0\r",
											"    for (let i = 11; i > 1; i--) {\r",
											"        sum += cpfDigits[11 - i] * i\r",
											"    }\r",
											" \r",
											"    const secondVerifierDigits = (sum * 10) % 11\r",
											"    cpfDigits.push(secondVerifierDigits === 10 ? 0 : secondVerifierDigits)\r",
											" \r",
											"    return cpfDigits.join('')\r",
											"}\r",
											"pm.environment.set(\"CPFUser\", cpf())"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenUser}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{SimpleName}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"1234@Test\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": {{CPFUser}},\r\n  \"confirmPassword\": \"1234@Test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Error Message Validation: Enter First and Last Name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenUser}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"Alice\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"1234@Test\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": {{CPFUser}},\r\n  \"confirmPassword\": \"1234@Test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "The unformatted e-mail field @",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"isadoracunhaconvergentes.com.br\",\r\n  \"password\": \"1234@Test\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": {{CPFUser}},\r\n  \"confirmPassword\": \"1234@Test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "The email field populated without the format .COM.BR",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"isadoracunha@convergentes\",\r\n  \"password\": \"1234@Test\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": {{CPFUser}},\r\n  \"confirmPassword\": \"1234@Test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "The email field filled with space in the name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"isadora cunha@convergentes.com.br\",\r\n  \"password\": \"1234@Test\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": {{CPFUser}},\r\n  \"confirmPassword\": \"1234@Test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "The email field filled with space in the domain",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"isadoracunha@conver gentes.com.br\",\r\n  \"password\": \"1234@Test\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": {{CPFUser}},\r\n  \"confirmPassword\": \"1234@Test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "E-mail field not filled in",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"\",\r\n  \"password\": \"1234@Test\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": {{CPFUser}},\r\n  \"confirmPassword\": \"1234@Test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "The password field without filling in",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": {{CPFUser}},\r\n  \"confirmPassword\": \"1234@Test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "The password field filled in with 7 characters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"1234@Te\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": {{CPFUser}},\r\n  \"confirmPassword\": \"1234@Te\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "The password field filled in with 13 characters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const names = ['Alice', 'Miguel', 'Sophia', 'Arthur', 'Helena', 'Bernardo', 'Valentina', 'Heitor', 'Laura', 'Davi', 'Isabella', 'Lorenzo', 'Manuela', 'Theo', 'Luiza', 'Pedro', 'Giovanna', 'Gabriel', 'Julia', 'Enzo', 'Maria', 'Luiza', 'Matheus', 'Lorena', 'Lucas', 'Beatriz', 'Benjamin', 'Maria', 'Eduarda', 'Nicolas', 'Lara', 'Guilherme', 'Mariana', 'Rafael', 'Larissa', 'Joaquim', 'Camila', 'Samuel', 'Isadora', 'Henrique', 'Antonia', 'Gustavo', 'Maria', 'Clara', 'Murilo', 'Isabelly', 'Felipe', 'Lavinia', 'Pietro', 'Maria'];\r",
											" \r",
											"const lastnames = ['Silva', 'Santos', 'Oliveira', 'Souza', 'Rodrigues', 'Almeida', 'Lima', 'Ferreira', 'Pereira', 'Carvalho', 'Ribeiro', 'Costa', 'Araujo', 'Martins', 'Fernandes', 'Rocha', 'Melo', 'Barbosa', 'Cardoso', 'Nascimento', 'Gomes', 'Lopes', 'Marques', 'Ramos', 'Cunha', 'Brito', 'Dias', 'Campos', 'Castro', 'Monteiro', 'Mendes', 'Sousa', 'Monteiro', 'Braga', 'Moura', 'Barros', 'Pinto', 'Correia', 'Teixeira', 'Machado', 'Andrade', 'Vieira', 'Saraiva', 'Lobo', 'Freitas', 'Leal', 'Reis', 'Carneiro'];\r",
											" \r",
											"const nameRandom = names[Math.floor(Math.random() * names.length)];\r",
											"const lastNameRandom = lastnames[Math.floor(Math.random() * lastnames.length)];\r",
											" \r",
											"pm.environment.set(\"FirstName\", pm.variables.replaceIn(nameRandom))\r",
											" \r",
											"pm.environment.set(\"LastName\", pm.variables.replaceIn(lastNameRandom))\r",
											" \r",
											"pm.environment.set(\"FullName\", \r",
											"    pm.variables.replaceIn(nameRandom + ' ' + lastNameRandom))\r",
											" \r",
											" \r",
											"pm.environment.set(\"Email\",  \r",
											"    pm.variables.replaceIn(nameRandom.toLowerCase() + lastNameRandom.toLowerCase() + '@convergentes.com.br'))\r",
											" \r",
											"function gerarSenha() {\r",
											"  const caracteres = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%\";\r",
											"  const comprimentoMinimo = 13;\r",
											"  const comprimentoMaximo = 13;\r",
											"  \r",
											"  let senhaArray = [];\r",
											"\r",
											"  senhaArray.push(caracteres[Math.floor(Math.random() * 26)]); // Caractere maiúsculo\r",
											"  senhaArray.push(caracteres[26 + Math.floor(Math.random() * 26)]); // Caractere minúsculo\r",
											"  senhaArray.push(caracteres[52 + Math.floor(Math.random() * 10)]); // Número\r",
											"  senhaArray.push(caracteres[62 + Math.floor(Math.random() * 4)]); // Caractere especial\r",
											"\r",
											"  const comprimentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\r",
											"\r",
											"  for (let i = 0; i < comprimentoRestante; i++) {\r",
											"    senhaArray.push(caracteres[Math.floor(Math.random() * caracteres.length)]);\r",
											"  }\r",
											"\r",
											"  return shuffleString(senhaArray.join(\"\"));\r",
											"}\r",
											"\r",
											"function shuffleString(string) {\r",
											"  return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
											"}\r",
											"\r",
											"pm.environment.set(\"Password13\", gerarSenha());\r",
											" \r",
											"function cpf() {\r",
											"    const randomDigit = () => Math.floor(Math.random() * 10)\r",
											"    const cpfDigits = Array.from({length: 9 }, randomDigit)\r",
											" \r",
											"    let sum = 0\r",
											"    for (let i = 10; i > 1; i--) {\r",
											"        sum+= cpfDigits[10 - i ] * i\r",
											"    }\r",
											" \r",
											"    const firstVerifierDigits = (sum * 10) % 11\r",
											"    cpfDigits.push(firstVerifierDigits === 10 ? 0 : firstVerifierDigits)\r",
											" \r",
											"    sum = 0\r",
											"    for (let i = 11; i > 1; i--) {\r",
											"        sum += cpfDigits[11 - i] * i\r",
											"    }\r",
											" \r",
											"    const secondVerifierDigits = (sum * 10) % 11\r",
											"    cpfDigits.push(secondVerifierDigits === 10 ? 0 : secondVerifierDigits)\r",
											" \r",
											"    return cpfDigits.join('')\r",
											"}\r",
											"pm.environment.set(\"CPFUser\", cpf())"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"{{Password13}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": {{CPFUser}},\r\n  \"confirmPassword\": \"{{Password13}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "The password field filled in with 16 characters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"const names = ['Alice', 'Miguel', 'Sophia', 'Arthur', 'Helena', 'Bernardo', 'Valentina', 'Heitor', 'Laura', 'Davi', 'Isabella', 'Lorenzo', 'Manuela', 'Theo', 'Luiza', 'Pedro', 'Giovanna', 'Gabriel', 'Julia', 'Enzo', 'Maria', 'Luiza', 'Matheus', 'Lorena', 'Lucas', 'Beatriz', 'Benjamin', 'Maria', 'Eduarda', 'Nicolas', 'Lara', 'Guilherme', 'Mariana', 'Rafael', 'Larissa', 'Joaquim', 'Camila', 'Samuel', 'Isadora', 'Henrique', 'Antonia', 'Gustavo', 'Maria', 'Clara', 'Murilo', 'Isabelly', 'Felipe', 'Lavinia', 'Pietro', 'Maria'];\r",
											" \r",
											"const lastnames = ['Silva', 'Santos', 'Oliveira', 'Souza', 'Rodrigues', 'Almeida', 'Lima', 'Ferreira', 'Pereira', 'Carvalho', 'Ribeiro', 'Costa', 'Araujo', 'Martins', 'Fernandes', 'Rocha', 'Melo', 'Barbosa', 'Cardoso', 'Nascimento', 'Gomes', 'Lopes', 'Marques', 'Ramos', 'Cunha', 'Brito', 'Dias', 'Campos', 'Castro', 'Monteiro', 'Mendes', 'Sousa', 'Monteiro', 'Braga', 'Moura', 'Barros', 'Pinto', 'Correia', 'Teixeira', 'Machado', 'Andrade', 'Vieira', 'Saraiva', 'Lobo', 'Freitas', 'Leal', 'Reis', 'Carneiro'];\r",
											" \r",
											"const nameRandom = names[Math.floor(Math.random() * names.length)];\r",
											"const lastNameRandom = lastnames[Math.floor(Math.random() * lastnames.length)];\r",
											" \r",
											"pm.environment.set(\"FirstName\", pm.variables.replaceIn(nameRandom))\r",
											" \r",
											"pm.environment.set(\"LastName\", pm.variables.replaceIn(lastNameRandom))\r",
											" \r",
											"pm.environment.set(\"FullName\", \r",
											"    pm.variables.replaceIn(nameRandom + ' ' + lastNameRandom))\r",
											" \r",
											" \r",
											"pm.environment.set(\"Email\",  \r",
											"    pm.variables.replaceIn(nameRandom.toLowerCase() + lastNameRandom.toLowerCase() + '@convergentes.com.br'))\r",
											" \r",
											"function gerarSenha() {\r",
											"  const caracteres = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%\";\r",
											"  const comprimentoMinimo = 16;\r",
											"  const comprimentoMaximo = 16;\r",
											"  \r",
											"  let senhaArray = [];\r",
											"\r",
											"  senhaArray.push(caracteres[Math.floor(Math.random() * 26)]); // Caractere maiúsculo\r",
											"  senhaArray.push(caracteres[26 + Math.floor(Math.random() * 26)]); // Caractere minúsculo\r",
											"  senhaArray.push(caracteres[52 + Math.floor(Math.random() * 10)]); // Número\r",
											"  senhaArray.push(caracteres[62 + Math.floor(Math.random() * 4)]); // Caractere especial\r",
											"\r",
											"  const comprimentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\r",
											"\r",
											"  for (let i = 0; i < comprimentoRestante; i++) {\r",
											"    senhaArray.push(caracteres[Math.floor(Math.random() * caracteres.length)]);\r",
											"  }\r",
											"\r",
											"  return shuffleString(senhaArray.join(\"\"));\r",
											"}\r",
											"\r",
											"function shuffleString(string) {\r",
											"  return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
											"}\r",
											"\r",
											"pm.environment.set(\"Password16\", gerarSenha());\r",
											" \r",
											"function cpf() {\r",
											"    const randomDigit = () => Math.floor(Math.random() * 10)\r",
											"    const cpfDigits = Array.from({length: 9 }, randomDigit)\r",
											" \r",
											"    let sum = 0\r",
											"    for (let i = 10; i > 1; i--) {\r",
											"        sum+= cpfDigits[10 - i ] * i\r",
											"    }\r",
											" \r",
											"    const firstVerifierDigits = (sum * 10) % 11\r",
											"    cpfDigits.push(firstVerifierDigits === 10 ? 0 : firstVerifierDigits)\r",
											" \r",
											"    sum = 0\r",
											"    for (let i = 11; i > 1; i--) {\r",
											"        sum += cpfDigits[11 - i] * i\r",
											"    }\r",
											" \r",
											"    const secondVerifierDigits = (sum * 10) % 11\r",
											"    cpfDigits.push(secondVerifierDigits === 10 ? 0 : secondVerifierDigits)\r",
											" \r",
											"    return cpfDigits.join('')\r",
											"}\r",
											"pm.environment.set(\"CPFUser\", cpf())"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"{{Password16}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": {{CPFUser}},\r\n  \"confirmPassword\": \"{{Password16}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "The password field filled in with 17 characters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"1234@Testeeeeeeee\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": {{CPFUser}},\r\n  \"confirmPassword\": \"1234@Testeeeeeeee\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "The password field filled in without a capital letter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const names = ['Alice', 'Miguel', 'Sophia', 'Arthur', 'Helena', 'Bernardo', 'Valentina', 'Heitor', 'Laura', 'Davi', 'Isabella', 'Lorenzo', 'Manuela', 'Theo', 'Luiza', 'Pedro', 'Giovanna', 'Gabriel', 'Julia', 'Enzo', 'Maria', 'Luiza', 'Matheus', 'Lorena', 'Lucas', 'Beatriz', 'Benjamin', 'Maria', 'Eduarda', 'Nicolas', 'Lara', 'Guilherme', 'Mariana', 'Rafael', 'Larissa', 'Joaquim', 'Camila', 'Samuel', 'Isadora', 'Henrique', 'Antonia', 'Gustavo', 'Maria', 'Clara', 'Murilo', 'Isabelly', 'Felipe', 'Lavinia', 'Pietro', 'Maria'];\r",
											" \r",
											"const lastnames = ['Silva', 'Santos', 'Oliveira', 'Souza', 'Rodrigues', 'Almeida', 'Lima', 'Ferreira', 'Pereira', 'Carvalho', 'Ribeiro', 'Costa', 'Araujo', 'Martins', 'Fernandes', 'Rocha', 'Melo', 'Barbosa', 'Cardoso', 'Nascimento', 'Gomes', 'Lopes', 'Marques', 'Ramos', 'Cunha', 'Brito', 'Dias', 'Campos', 'Castro', 'Monteiro', 'Mendes', 'Sousa', 'Monteiro', 'Braga', 'Moura', 'Barros', 'Pinto', 'Correia', 'Teixeira', 'Machado', 'Andrade', 'Vieira', 'Saraiva', 'Lobo', 'Freitas', 'Leal', 'Reis', 'Carneiro'];\r",
											" \r",
											"const nameRandom = names[Math.floor(Math.random() * names.length)];\r",
											"const lastNameRandom = lastnames[Math.floor(Math.random() * lastnames.length)];\r",
											" \r",
											"pm.environment.set(\"FirstName\", pm.variables.replaceIn(nameRandom))\r",
											" \r",
											"pm.environment.set(\"LastName\", pm.variables.replaceIn(lastNameRandom))\r",
											" \r",
											"pm.environment.set(\"FullName\", \r",
											"    pm.variables.replaceIn(nameRandom + ' ' + lastNameRandom))\r",
											" \r",
											" \r",
											"pm.environment.set(\"Email\",  \r",
											"    pm.variables.replaceIn(nameRandom.toLowerCase() + lastNameRandom.toLowerCase() + '@convergentes.com.br'))\r",
											" \r",
											"function gerarSenha() {\r",
											"  const caracteres = \"abcdefghijklmnopqrstuvwxyz0123456789@#$%\";\r",
											"  const comprimentoMinimo = 8;\r",
											"  const comprimentoMaximo = 12;\r",
											"  \r",
											"  let senhaArray = [];\r",
											"\r",
											"  senhaArray.push(caracteres[26 + Math.floor(Math.random() * 26)]); // Caractere minúsculo\r",
											"  senhaArray.push(caracteres[52 + Math.floor(Math.random() * 10)]); // Número\r",
											"  senhaArray.push(caracteres[62 + Math.floor(Math.random() * 4)]); // Caractere especial\r",
											"\r",
											"  const comprimentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\r",
											"\r",
											"  for (let i = 0; i < comprimentoRestante; i++) {\r",
											"    senhaArray.push(caracteres[Math.floor(Math.random() * caracteres.length)]);\r",
											"  }\r",
											"\r",
											"  return shuffleString(senhaArray.join(\"\"));\r",
											"}\r",
											"\r",
											"function shuffleString(string) {\r",
											"  return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
											"}\r",
											"\r",
											"pm.environment.set(\"PasswordSemMaiuscula\", gerarSenha());\r",
											"\r",
											"\r",
											"function cpf() {\r",
											"    const randomDigit = () => Math.floor(Math.random() * 10)\r",
											"    const cpfDigits = Array.from({length: 9 }, randomDigit)\r",
											" \r",
											"    let sum = 0\r",
											"    for (let i = 10; i > 1; i--) {\r",
											"        sum+= cpfDigits[10 - i ] * i\r",
											"    }\r",
											" \r",
											"    const firstVerifierDigits = (sum * 10) % 11\r",
											"    cpfDigits.push(firstVerifierDigits === 10 ? 0 : firstVerifierDigits)\r",
											" \r",
											"    sum = 0\r",
											"    for (let i = 11; i > 1; i--) {\r",
											"        sum += cpfDigits[11 - i] * i\r",
											"    }\r",
											" \r",
											"    const secondVerifierDigits = (sum * 10) % 11\r",
											"    cpfDigits.push(secondVerifierDigits === 10 ? 0 : secondVerifierDigits)\r",
											" \r",
											"    return cpfDigits.join('')\r",
											"}\r",
											"pm.environment.set(\"CPFUser\", cpf())\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"{{PasswordSemMaiuscula}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": {{CPFUser}},\r\n  \"confirmPassword\": \"{{PasswordSemMaiuscula}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "The password field filled in without a lowercase letter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"const names = ['Alice', 'Miguel', 'Sophia', 'Arthur', 'Helena', 'Bernardo', 'Valentina', 'Heitor', 'Laura', 'Davi', 'Isabella', 'Lorenzo', 'Manuela', 'Theo', 'Luiza', 'Pedro', 'Giovanna', 'Gabriel', 'Julia', 'Enzo', 'Maria', 'Luiza', 'Matheus', 'Lorena', 'Lucas', 'Beatriz', 'Benjamin', 'Maria', 'Eduarda', 'Nicolas', 'Lara', 'Guilherme', 'Mariana', 'Rafael', 'Larissa', 'Joaquim', 'Camila', 'Samuel', 'Isadora', 'Henrique', 'Antonia', 'Gustavo', 'Maria', 'Clara', 'Murilo', 'Isabelly', 'Felipe', 'Lavinia', 'Pietro', 'Maria'];\r",
											" \r",
											"const lastnames = ['Silva', 'Santos', 'Oliveira', 'Souza', 'Rodrigues', 'Almeida', 'Lima', 'Ferreira', 'Pereira', 'Carvalho', 'Ribeiro', 'Costa', 'Araujo', 'Martins', 'Fernandes', 'Rocha', 'Melo', 'Barbosa', 'Cardoso', 'Nascimento', 'Gomes', 'Lopes', 'Marques', 'Ramos', 'Cunha', 'Brito', 'Dias', 'Campos', 'Castro', 'Monteiro', 'Mendes', 'Sousa', 'Monteiro', 'Braga', 'Moura', 'Barros', 'Pinto', 'Correia', 'Teixeira', 'Machado', 'Andrade', 'Vieira', 'Saraiva', 'Lobo', 'Freitas', 'Leal', 'Reis', 'Carneiro'];\r",
											" \r",
											"const nameRandom = names[Math.floor(Math.random() * names.length)];\r",
											"const lastNameRandom = lastnames[Math.floor(Math.random() * lastnames.length)];\r",
											" \r",
											"pm.environment.set(\"FirstName\", pm.variables.replaceIn(nameRandom))\r",
											" \r",
											"pm.environment.set(\"LastName\", pm.variables.replaceIn(lastNameRandom))\r",
											" \r",
											"pm.environment.set(\"FullName\", \r",
											"    pm.variables.replaceIn(nameRandom + ' ' + lastNameRandom))\r",
											" \r",
											" \r",
											"pm.environment.set(\"Email\",  \r",
											"    pm.variables.replaceIn(nameRandom.toLowerCase() + lastNameRandom.toLowerCase() + '@convergentes.com.br'))\r",
											" \r",
											"function gerarSenha() {\r",
											"  const caracteres = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@#$%\";\r",
											"  const comprimentoMinimo = 8;\r",
											"  const comprimentoMaximo = 12;\r",
											"  \r",
											"  let senhaArray = [];\r",
											"\r",
											"  senhaArray.push(caracteres[Math.floor(Math.random() * 26)]); // Caractere maiúsculo\r",
											"  senhaArray.push(caracteres[52 + Math.floor(Math.random() * 10)]); // Número\r",
											"  senhaArray.push(caracteres[62 + Math.floor(Math.random() * 4)]); // Caractere especial\r",
											"\r",
											"  const comprimentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\r",
											"\r",
											"  for (let i = 0; i < comprimentoRestante; i++) {\r",
											"    senhaArray.push(caracteres[Math.floor(Math.random() * caracteres.length)]);\r",
											"  }\r",
											"\r",
											"  return shuffleString(senhaArray.join(\"\"));\r",
											"}\r",
											"\r",
											"function shuffleString(string) {\r",
											"  return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
											"}\r",
											"\r",
											"pm.environment.set(\"PasswordSemMinuscula\", gerarSenha());\r",
											"\r",
											"\r",
											"function cpf() {\r",
											"    const randomDigit = () => Math.floor(Math.random() * 10)\r",
											"    const cpfDigits = Array.from({length: 9 }, randomDigit)\r",
											" \r",
											"    let sum = 0\r",
											"    for (let i = 10; i > 1; i--) {\r",
											"        sum+= cpfDigits[10 - i ] * i\r",
											"    }\r",
											" \r",
											"    const firstVerifierDigits = (sum * 10) % 11\r",
											"    cpfDigits.push(firstVerifierDigits === 10 ? 0 : firstVerifierDigits)\r",
											" \r",
											"    sum = 0\r",
											"    for (let i = 11; i > 1; i--) {\r",
											"        sum += cpfDigits[11 - i] * i\r",
											"    }\r",
											" \r",
											"    const secondVerifierDigits = (sum * 10) % 11\r",
											"    cpfDigits.push(secondVerifierDigits === 10 ? 0 : secondVerifierDigits)\r",
											" \r",
											"    return cpfDigits.join('')\r",
											"}\r",
											"pm.environment.set(\"CPFUser\", cpf())"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"{{PasswordSemMinuscula}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": {{CPFUser}},\r\n  \"confirmPassword\": \"{{PasswordSemMinuscula}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "The password field filled in without a special character",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"1234Test\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": {{CPFUser}},\r\n  \"confirmPassword\": \"1234Test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "The password field filled in without a number",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"test@Test\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": {{CPFUser}},\r\n  \"confirmPassword\": \"test@Test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Error Message Validation: Password Must Contain: An uppercase letter, lowercase letter, number, and a special character(@#$%)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Field value is correct\", function () {\r",
											"  var jsonData = pm.response.json();\r",
											"  pm.expect(jsonData.alert).to.eql([\"Senha precisa conter: uma letra maiúscula, minúscula, número, e um caractere especial (@#$%).\"]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenUser}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"1234Test\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": {{CPFUser}},\r\n  \"confirmPassword\": \"1234Test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "The Password field populated with divergent passwords",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"1234@Testt\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": {{CPFUser}},\r\n  \"confirmPassword\": \"1234@Test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "The Confirm Password field populated with divergent passwords",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"1234@Test\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": {{CPFUser}},\r\n  \"confirmPassword\": \"1234@Teste\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "The Confirm Password field without filling in",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"1234@Test\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": {{CPFUser}},\r\n  \"confirmPassword\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Error Message Validation: Passwords Do Not Match",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenUser}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"1234@Test\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": {{CPFUser}},\r\n  \"confirmPassword\": \"1234@Testee\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a user's status  - token user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenUser}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"status\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/status/{{IdUser}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										"status",
										"{{IdUser}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a user's password by passing the ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"password\": \"1234@Test\",\r\n  \"confirmPassword\": \"1234@Test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/password/{{IdUser}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										"password",
										"{{IdUser}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a user's data by passing the ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"Test Test\",\r\n  \"mail\": \"test@test.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/{{IdUser}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										"{{IdUser}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "E-mail field not filled in",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenUser}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"mail\": \"\",\r\n  \"password\": \"{{Password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Incorrect email field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenUser}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"mail\": \"samantha@gmail.com\",\r\n  \"password\": \"{{Password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Password field not filled in",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenUser}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Incorrect password field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenUser}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"1234@Error\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Field e-mail and password of a user without registration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenUser}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"mail\": \"samantha@gmail.com\",\r\n  \"password\": \"1234@Error\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete - user id token user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenUser}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/{{IdUser}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										"{{IdUser}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Company",
			"item": [
				{
					"name": "Config",
					"item": [
						{
							"name": "Login - Default",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.globals.set(\"Token\", JSON.parse(responseBody).token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"mail\": \"{{MailAdmin}}\",\r\n    \"password\": \"{{PasswordAdmin}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/login/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"login",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "New Company Registration",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
											"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
											"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
											"\r",
											"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
											"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
											"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
											"\r",
											"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
											"\r",
											"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
											"\r",
											"pm.environment.set(\"Email\",  \r",
											"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
											"\r",
											"\r",
											"function gerarCNPJ() {\r",
											"    var n = [];\r",
											"    for (var i = 0; i < 8; i++) {\r",
											"        n[i] = Math.floor(Math.random() * 10);\r",
											"    }\r",
											"    n[8] = 0;\r",
											"    n[9] = 0;\r",
											"    n[10] = 0;\r",
											"    n[11] = 1;\r",
											"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
											"    d1 = 11 - (d1 % 11);\r",
											"    if (d1 >= 10) {\r",
											"        d1 = 0;\r",
											"    }\r",
											"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
											"    d2 = 11 - (d2 % 11);\r",
											"    if (d2 >= 10) {\r",
											"        d2 = 0;\r",
											"    }\r",
											"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
											"}\r",
											"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
											"\r",
											"\r",
											"function gerarTelefone() {\r",
											"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
											"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
											"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
											"    return '+55'  + ddd  +  n1  + n2;\r",
											"}\r",
											"pm.environment.set(\"Telefone\", gerarTelefone());\r",
											"\r",
											"\r",
											"function gerarCEP() {\r",
											"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
											"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
											"}\r",
											"pm.environment.set(\"CEP\", gerarCEP());\r",
											"\r",
											"\r",
											"function gerarRua() {\r",
											"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
											"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
											"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
											"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
											"    return nome + \" \" + adjetivo;\r",
											"}\r",
											"pm.environment.set(\"Rua\", gerarRua());\r",
											"\r",
											"\r",
											"function gerarBairro() {\r",
											"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
											"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
											"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
											"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
											"    return nome + \" \" + adjetivo;\r",
											"}\r",
											"pm.environment.set(\"Bairro\", gerarBairro());\r",
											"\r",
											"\r",
											"function gerarNumeroCasa() {\r",
											"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
											"}\r",
											"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
											"\r",
											"\r",
											"function gerarComplementoEndereco() {\r",
											"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
											"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
											"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
											"    return complemento + \" \" + numero;\r",
											"}\r",
											"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"  pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.environment.set(\"IdCompany\", JSON.parse(responseBody).newCompany._id);\r",
											"\r",
											"pm.test(\"Check is corporateName is true\", function () {\r",
											"  pm.expect(pm.environment.get(\"CorporateName\")).to.eql(JSON.parse(responseBody).newcompany.corporateName);\r",
											"});\r",
											"\r",
											"pm.test(\"Check mail is true\", function(){\r",
											"    pm.expect(pm.environment.get(\"Email\")).to.eql(JSON.parse(responseBody).newCompany.mail);\r",
											"});\r",
											"\r",
											"pm.test(\"Check CNPJ is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"CNPJ\")).to.eql(JSON.parse(responseBody).newCompany.cnpj)\r",
											"});\r",
											"\r",
											"pm.test(\"Check matriz is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"RazaoSocial\")).to.eql(JSON.parse(responseBody).newCompany.matriz)\r",
											"});\r",
											"\r",
											"pm.test(\"Check telephone is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"Telefone\")).to.eql(JSON.parse(responseBody).newCompany.telephone)\r",
											"});\r",
											"\r",
											"pm.test(\"Verify the message\", () => {\r",
											"   pm.environment.set(\"MsgSuccessfulRegistration\", `Olá a companhia ${pm.environment.get(\"CorporateName\")} foi cadastrada com sucesso.`)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/company/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"company",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "New Company Registration",
					"item": [
						{
							"name": "funcional",
							"item": [
								{
									"name": "corporateName with numbers and letters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"Pinnacle Global 27\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "corporateName with numbers only",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"123 456 7890\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "corporateName with letters only",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"Pinnacle Global\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "corporateName with 100 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "corporateName with 99 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "RegisterCompany with numbers only",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"16576112000142\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "RegisterCompany with a 13 digit",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"1657611200014\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "registerCompany with a 14 digit",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"12345678901234\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Validation of the message \"Registration successful\"",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Verify the message\", () => {\r",
													"   pm.environment.set(\"MsgSuccessfulRegistration\", `Olá a companhia ${pm.environment.get(\"CorporateName\")} foi cadastrada com sucesso.`)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Matrix with numbers and letters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"Pinnacles 27 Globals EIRELI \",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Matrix with numbers only",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"1234 5678 9012\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Matrix filled with 99 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Matrix filled with 100 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Matrix with letter only",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"Pinnacles Globals EIRELI\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "ResponsibleContact with letters only",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Maria Jose\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "ResponsibleContact filled with 100 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "responsibleContact filled with 99 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "ServiceDescription with numbers and letters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Te5te5\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "ServiceDescription with letter only",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "ServiceDescription with numbers only",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"12345\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Telephone with numbers only",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"+554837482892\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Telephone with 15 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"+55483748289200\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "telephone with 14 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"12345678901234\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "The mail field filled in with .COM.BR format",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"sociedademoderna@convergentes.com.br\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "The mail field filled in with .COM.ORG format",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"sociedademoderna@convergentes.com.org\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "The mail field filled in with .COM.NET format",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"sociedademoderna@convergentes.com.net\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Street with numbers and letters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"Travessa Central 27\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Street with numbers only",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"27\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Street with letters only",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"Travessa Central\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Street with 'ª' character",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"ª\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Street with 'º’ character",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"º\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Street with '‘' character",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \" ‘ \",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Street with '-' character",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"-\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Street with 50 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"Bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Street with 49 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"Bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Number with numbers only",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"72\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Number with 9 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"123456789\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Number with 10 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"0123456789\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Complement without padding",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Complement with numbers and letters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"Sala 272\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Complement with letters only",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"Sala\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Complement with numbers only",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"272\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Complement with 'ª' character",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"ª\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Complement with 'º’ character",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"º\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Complement with '‘' character",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"  ‘  \",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Complement with '-' character",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": {{NumeroCasa}},\r\n      \"complement\": \"-\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Complement with 80 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"Cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Complement with 79 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"Cccccccccccccccccccccccccccccccccccccccccccccccccc cccccccccccccccccccccccccccc\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "District with 'ª' character",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"ª\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "District with 'º’ character",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"º\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "District with '‘'  character",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"‘\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "District with '-'  character",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"-\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "District with numbers and letters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Residencial Bela Vista 27\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "District with numbers only",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"272\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "District with letters only",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Residencial Bela Vista\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "District with 50 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "District with 49 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "City with letters only",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "City with 'ª' character",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"ª\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "City with '‘' character",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"‘\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "City with 'º’ character",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"º\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "City with '-' character",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"-\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "City with 49 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"Bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "City with 50 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"Bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "State with letters only",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "State with 2 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "State with 1 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"S\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Country with letters only",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Country with 50 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Country with 49 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "ZipCode with numbers only",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const nomes = [\"Empresa\", \"Clube\", \"Industria\", \"Comercio\", \"Instituto\", \"Companhia\", \"Prime\", \"Nexus\", \"Elite\", \"Paragon\", \"Pinnacle\", \"Apex\", \"Assembleia\", \"Sociedade\", \"Entidade\"];\r",
													"const adjetivos = [\"Global\", \"Nacional\", \"Internacional\", \"Inovadora\", \"Moderna\", \"Tradicional\", \"Edificio\", \"Tecnologias\", \"Predial\", \"Logistica\", \"Estadual\", \"Municipal\", \"\"];\r",
													"const sufixos = [\"Ltda\", \"S.A.\", \"EIRELI\", \"MEI\", \"ME\"];\r",
													"\r",
													"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"const adjetivoRandom = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"const sufixoRandom = sufixos[Math.floor(Math.random() * sufixos.length)];\r",
													"\r",
													"pm.environment.set(\"CorporateName\", nomeRandom + \" \" + adjetivoRandom);\r",
													"\r",
													"pm.environment.set(\"RazaoSocial\", nomeRandom + \" \" + adjetivoRandom + \" \" + sufixoRandom);\r",
													"\r",
													"pm.environment.set(\"Email\",  \r",
													"    pm.variables.replaceIn(nomeRandom.toLowerCase() + adjetivoRandom.toLowerCase() + '@convergentes.com'))\r",
													"\r",
													"\r",
													"function gerarCNPJ() {\r",
													"    var n = [];\r",
													"    for (var i = 0; i < 8; i++) {\r",
													"        n[i] = Math.floor(Math.random() * 10);\r",
													"    }\r",
													"    n[8] = 0;\r",
													"    n[9] = 0;\r",
													"    n[10] = 0;\r",
													"    n[11] = 1;\r",
													"    var d1 = n[0] * 5 + n[1] * 4 + n[2] * 3 + n[3] * 2 + n[4] * 9 + n[5] * 8 + n[6] * 7 + n[7] * 6;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n[0] * 6 + n[1] * 5 + n[2] * 4 + n[3] * 3 + n[4] * 2 + n[5] * 9 + n[6] * 8 + n[7] * 7 + n[8] * 6 + n[9] * 5 + n[10] * 4 + n[11] * 3;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n[0] + n[1] + n[2] + n[3] + n[4] + n[5] + n[6] + n[7] + n[8] + n[9] + n[10] + n[11] + d1 + d2;\r",
													"}\r",
													"pm.environment.set(\"CNPJ\", gerarCNPJ());\r",
													"\r",
													"\r",
													"function gerarTelefone() {\r",
													"    var ddd = Math.floor(Math.random() * (99 - 11 + 1)) + 11;\r",
													"    var n1 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    var n2 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r",
													"    return '+55'  + ddd  +  n1  + n2;\r",
													"}\r",
													"pm.environment.set(\"Telefone\", gerarTelefone());\r",
													"\r",
													"\r",
													"function gerarCEP() {\r",
													"    var n = Math.floor(Math.random() * 90000000) + 10000000;\r",
													"    return String(n).slice(0, 5)  + String(n).slice(5);\r",
													"}\r",
													"pm.environment.set(\"CEP\", gerarCEP());\r",
													"\r",
													"\r",
													"function gerarRua() {\r",
													"    var nomes = [\"Avenida\", \"Rua\", \"Travessa\", \"Alameda\", \"Praça\"];\r",
													"    var adjetivos = [\"Principal\", \"Central\", \"Nova\", \"Velha\", \"Grande\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Rua\", gerarRua());\r",
													"\r",
													"\r",
													"function gerarBairro() {\r",
													"    var nomes = [\"Jardim\", \"Vila\", \"Parque\", \"Residencial\", \"Conjunto\"];\r",
													"    var adjetivos = [\"Bela Vista\", \"Floresta\", \"Centro\", \"Nova\", \"Velha\"];\r",
													"    var nome = nomes[Math.floor(Math.random() * nomes.length)];\r",
													"    var adjetivo = adjetivos[Math.floor(Math.random() * adjetivos.length)];\r",
													"    return nome + \" \" + adjetivo;\r",
													"}\r",
													"pm.environment.set(\"Bairro\", gerarBairro());\r",
													"\r",
													"\r",
													"function gerarNumeroCasa() {\r",
													"    return Math.floor(Math.random() * (9999 - 1 + 1)) + 1;\r",
													"}\r",
													"pm.environment.set(\"NumeroCasa\", gerarNumeroCasa());\r",
													"\r",
													"\r",
													"function gerarComplementoEndereco() {\r",
													"    var complementos = [\"Apto\", \"Casa\", \"Bloco\", \"Lote\", \"Sala\"];\r",
													"    var numero = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r",
													"    var complemento = complementos[Math.floor(Math.random() * complementos.length)];\r",
													"    return complemento + \" \" + numero;\r",
													"}\r",
													"pm.environment.set(\"ComplementoEndereco\", gerarComplementoEndereco());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"48334759\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "CorporateName",
							"item": [
								{
									"name": "corporateName without padding",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "corporateName with a company already registered",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"Pinnacle Global\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "corporateName with 101 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "corporateName with special character",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"******* *******\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Validation of the message \"The field (nome_campo) is required\"",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Field value is correct\", function () {\r",
													"  var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.error).to.eql([\"O campo 'Nome da empresa' é obrigatório.\"]);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "RegisterCompany",
							"item": [
								{
									"name": "RegisterCompany No Fill",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "RegisterCompany with special character",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"16576112***142\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "RegisterCompany with numbers and letters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"165761120001aa\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "RegisterCompany with letters only",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"aaaaaaaaaaaaaa\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "RegisterCompany with a CNPJ already registered",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"16576112000142\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "RegisterCompany with a 15 digit",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"165761120001422\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Matriz",
							"item": [
								{
									"name": "Matrix without padding",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Parent company with company name already registered",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"Pinnacles Globals EIRELI\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Matrix filled with 101 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Matrix with special character",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"*********\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "ResponsibleContact",
							"item": [
								{
									"name": "ResponsibleContact no padding",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "ResponsibleContact with special character",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Mari@ Jºse\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "ResponsibleContact with numbers only",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"123456 123456\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "ResponsibleContact with numbers and letters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Mar1a J0se\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "ResponsibleContact filled with 101 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "ResponsibleContact filled in simple name",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Telephone",
							"item": [
								{
									"name": "Telephone without padding",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Telephone with special character",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"+55**37482892\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Telephone only with letters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"XXXXXXXXXXXXXX\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Telephone with numbers and letters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"BR4837482892\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Telephone with 20 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"+4420123456789052636\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Telephone with a prefix from another country",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"+44201234567890\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Telephone with 16 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"+554837482892000\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Telephone with 21 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"+55483748289200000000\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Mail",
							"item": [
								{
									"name": "Mail without padding",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "The unformatted mail field @",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"sociedademodernaconvergentes.com\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "The mail field populated without the format .COM",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"sociedademoderna@convergentes\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "filled mail without domain",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"paragonlogistica@.com\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "ServiceDescription",
							"item": [
								{
									"name": "ServiceDescription without padding",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "serviceDescription with special character",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"*****\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company/",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company",
												""
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Adress",
							"item": [
								{
									"name": "street",
									"item": [
										{
											"name": "Street No Fill",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Street with 51 characters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"Bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Street with 80 characters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"Bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbccccccccccccccccccccccccccccc\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Street with 81 characters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"Bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbcccccccccccccccccccccccccccccc\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "street with special characters other than ('ª', 'º', '‘' e '-')",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"*****\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "number",
									"item": [
										{
											"name": "Number without padding",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Number with letters only",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"ABCD\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Number with numbers and letters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"72AB\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Number with special characters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"**\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Number with special characters '/'",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"/\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Number with 11 characters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{01234567890}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "complement",
									"item": [
										{
											"name": "Complement with 81 characters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"Ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Complement with special characters other than ('ª', 'º', '‘' e '-')",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"*****\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "district",
									"item": [
										{
											"name": "District No Padding",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "District with 51 characters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "District with special characters other than ('ª', 'º', '‘' e '-')",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"*****\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "city",
									"item": [
										{
											"name": "City without padding",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "City with numbers only",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"222222222\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "City with numbers and letters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo27\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "City with special characters other than ('ª', 'º', '‘' e '-')",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"*******\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "City with 51 characters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"Bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "state",
									"item": [
										{
											"name": "State without padding",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "lowercase state",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"sp\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "State with numbers only",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"27\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "State with numbers and letters only",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"P2\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "State with special characters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"**\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "State with 3 characters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SPP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "country",
									"item": [
										{
											"name": "Country with numbers only",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"11111\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Country with numbers and letters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil27\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Country with special characters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"*****\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Country No Fill",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Country with 51 characters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{CEP}}\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"BbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbB\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "zipCode",
									"item": [
										{
											"name": "ZipCode with letters only",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"abcdepgh\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "ZipCode with numbers and letters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"13520abc\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "ZipCode with special characters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"+++***//\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "zipCode without padding",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{CNPJ}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"matriz\": \"{{RazaoSocial}}\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"{{Telefone}}\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"{{Bairro}}\",\r\n      \"street\": \"{{Rua}}\",\r\n      \"number\": \"{{NumeroCasa}}\",\r\n      \"complement\": \"{{ComplementoEndereco}}\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company/",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company",
														""
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Company Registration List",
					"item": [
						{
							"name": "listagem de empresas",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/company",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "contagem de empresas",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/company/count",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"company",
										"count"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Edit business address information",
					"item": [
						{
							"name": "atualizar o endereço de uma empresa passando o id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/company/address/{{IdCompany}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"company",
										"address",
										"{{IdCompany}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Edit Company Registration",
					"item": [
						{
							"name": "atualizar dados de uma empresa passando o id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"Teste do Teste\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/company/{{IdCompany}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"company",
										"{{IdCompany}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Query company by id",
					"item": [
						{
							"name": "mostrar uma empresa pelo id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/company/{{IdCompany}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"company",
										"{{IdCompany}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Update your company status",
					"item": [
						{
							"name": "atualizar o status de uma empresa passando o id.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"status\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/company/status/{{IdCompany}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"company",
										"status",
										"{{IdCompany}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete company registration",
					"item": [
						{
							"name": "deletar uma empresa passando o id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/api/company/{{IdCompany}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"company",
										"{{IdCompany}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Directors",
			"item": [
				{
					"name": "Config",
					"item": [
						{
							"name": "Login - Default",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.globals.set(\"Token\", JSON.parse(responseBody).token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"mail\": \"{{MailAdmin}}\",\r\n    \"password\": \"{{PasswordAdmin}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/login/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"login",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "New Director Registration",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const nomes = [\"Executivooo\", \"Financeirooo\", \"Operacoesss\", \"Marketinggg\", \"Recursos Humanosss\", \"Planejamento Estrategicooo\", \"Relacoes Publicasss\", \"Sutentabilidadeee\", \"Responsabilidade Socialll\", \"Vendasss\", \"Conformidadee\", \"Inovacaooo\", \"Tecnologiaaa\", \"Eticaaa\"];\r",
											"\r",
											"\r",
											"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
											"\r",
											"pm.environment.set(\"BoardName\", pm.variables.replaceIn(nomeRandom))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.environment.set(\"IdBoard\", JSON.parse(responseBody).newBoard._id);\r",
											"\r",
											"pm.test(\"Check is boardName is true\", function () {\r",
											"  pm.expect(pm.environment.get(\"BoardName\")).to.eql(JSON.parse(responseBody).newBoard.boardName);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify the message\", () => {\r",
											"   pm.environment.set(\"MsgSuccessfulRegistrationBoard\", 'Cadastro realizado com sucesso.')\r",
											"})\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"  pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"{{BoardName}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/board/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Include Board of Directors",
					"item": [
						{
							"name": "Board of Directors Not Filled",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/board/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Capitalized Letters Only Board",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const nomes = [\"EXECUTIVO\", \"FINANCEIRO\", \"OPERACIONAL\", \"MARKETING\", \"RECURSOS HUMANOS\", \"PLANEJAMENTO ESTRATEGICO\", \"RELACOES PUBLICAS\", \"SUSTENTABILIDADE\", \"RESPONSABILIDADE SOCIAL\", \"VENDAS\", \"CONFORMIDADE\", \"INOVACAO\", \"TECNOLOGIA\", \"ETICA\", \"CONTABILIDADE\", \"ADMINISTRATIVO\", \"COMERCIAL\", \"PRODUCAO\", \"TECNICO\", \"COBRANCA\", \"COMPRAS\"];\r",
											"\r",
											"\r",
											"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
											"\r",
											"pm.environment.set(\"BOARDNAMEMAIUSCULA\", pm.variables.replaceIn(nomeRandom))\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"{{BOARDNAMEMAIUSCULA}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/board/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Lowercase only directory",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const nomes = [\"executivo\", \"financeiro\", \"operacional\", \"marketing\", \"recursos humanos\", \"planejamento estrategico\", \"relacoes publicas\", \"sutentabilidade\", \"responsabilidade social\", \"vendas\", \"conformidade\", \"inovacao\", \"tecnologia\", \"etica\", \"contabilidade\", \"administrativo\", \"comercial\", \"producao\", \"tecnico\", \"cobranca\", \"compras\"];\r",
											"\r",
											"\r",
											"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
											"\r",
											"pm.environment.set(\"boardnameminuscula\", pm.variables.replaceIn(nomeRandom))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"{{boardnameminuscula}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/board/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Board of Directors with Special Character &",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const nomes = [\"& &\", \"&& &\", \"&&& &\", \"&&&& &\", \"&&&&& &\", \"&&&&&& &&\", \"&&&&&&& &\", \"&&&&&&&& &\", \"&&&& &&&&& &\", \"&&&&& &&&&& &\", \"&&&&& &&&&&& &\", \"&&&&&& &&&&&& &\", \"&&&&&& &&&&&&& &\", \"& && &\", \"& &&& &\", \"&& && &\", \"&&& & &\", \"&& & &\", \"&&& && &\", \"&&& &&& &\", \"&& &&& &\"];\r",
											"\r",
											"\r",
											"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
											"\r",
											"pm.environment.set(\"BoardNameCaracter&\", pm.variables.replaceIn(nomeRandom))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"{{BoardNameCaracter&}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/board/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Board of Directors with Numbers",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const nomes = [\"12523\", \"45546\", \"78689\", \"123456\", \"234567\", \"345678\", \"456789\", \"01234\", \"04321\", \"54321\", \"654114\", \"254263257\", \"025489\", \"365478\", \"2541365\", \"985471\", \"3254123\", \"8745985\", \"3254125\", \"032145698\", \"2541586\"];\r",
											"\r",
											"\r",
											"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
											"\r",
											"pm.environment.set(\"BoardNameNumero\", pm.variables.replaceIn(nomeRandom))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"{{BoardNameNumero}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/board/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "board of directors with special character other than &",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"const caracteresEspeciais = \"!@#$%^*()_+{}:<>?~`-=[];',./\";\r",
											"let massaDeDados = \"\";\r",
											"for (let i = 0; i < 10; i++) {\r",
											"    massaDeDados += caracteresEspeciais.charAt(Math.floor(Math.random() * caracteresEspeciais.length));\r",
											"}\r",
											"\r",
											"pm.environment.set(\"BoardNameCaracterDiferente\", massaDeDados);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"{{BoardNameCaracterDiferente}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/board/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Board of Directors Filled with 50 characters",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const nomes = [\"Ccccccccccccccccccccccccccccccccccccccccccccccccca\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccb\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccd\", \"Ccccccccccccccccccccccccccccccccccccccccccccccccce\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccf\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccg\", \"Ccccccccccccccccccccccccccccccccccccccccccccccccch\", \"Ccccccccccccccccccccccccccccccccccccccccccccccccci\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccj\", \"Ccccccccccccccccccccccccccccccccccccccccccccccccck\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccl\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccm\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccn\", \"Ccccccccccccccccccccccccccccccccccccccccccccccccco\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccp\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccq\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccr\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccs\", \"Ccccccccccccccccccccccccccccccccccccccccccccccccct\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccu\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccv\"];\r",
											"\r",
											"\r",
											"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
											"\r",
											"pm.environment.set(\"BoardName50\", pm.variables.replaceIn(nomeRandom))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"{{BoardName50}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/board/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Board of Directors Filled with 51 characters",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const nomes = [\"Cccccccccccccccccccccccccccccccccccccccccccccccccac\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccbc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccdc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccec\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccfc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccgc\", \"Ccccccccccccccccccccccccccccccccccccccccccccccccchc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccic\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccjc\", \"Ccccccccccccccccccccccccccccccccccccccccccccccccckc\", \"Ccccccccccccccccccccccccccccccccccccccccccccccccclc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccmc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccnc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccoc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccpc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccqc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccrc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccsc\", \"Ccccccccccccccccccccccccccccccccccccccccccccccccctc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccuc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccvc\"];\r",
											"\r",
											"\r",
											"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
											"\r",
											"pm.environment.set(\"BoardName51\", pm.variables.replaceIn(nomeRandom))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"{{BoardName51}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/board/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Board of Directors with name already registered",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											" pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"Operações\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/board/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Validation of the message \"The field (nome_campo) is required.\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											" pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test('Verify message error', () => {\r",
											"    const MsgRequiredBoard = JSON.parse(responseBody).error[0]\r",
											"\r",
											"    pm.globals.set(\"MsgRequiredBoard\", MsgRequiredBoard)\r",
											"  \r",
											"   pm.expect((MsgRequiredBoard)).to.eql(JSON.parse(responseBody).error[0])\r",
											"})\r",
											"\r",
											"pm.test(\"Field value is correct\", function () {\r",
											"  var jsonData = pm.response.json();\r",
											"  pm.expect(jsonData.error).to.eql([\"O campo 'diretoria' é obrigatório.\"]);\r",
											"});\r",
											"\r",
											" "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/board/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate the message \"The field (nome_campo) can only contain (descrição_caracteres).\"",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const caracteresEspeciais = \"!@#$%^*()_+{}:<>?~`-=[];',./\";\r",
											"let massaDeDados = \"\";\r",
											"for (let i = 0; i < 10; i++) {\r",
											"    massaDeDados += caracteresEspeciais.charAt(Math.floor(Math.random() * caracteresEspeciais.length));\r",
											"}\r",
											"\r",
											"pm.environment.set(\"BoardCaracterDiferente\", massaDeDados);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test('Verify message error', () => {\r",
											"    const MsgCriteriaPasswordBoard = JSON.parse(responseBody).error[0]\r",
											"\r",
											"    pm.globals.set(\"MsgCriteriaPasswordBoard\", MsgCriteriaPasswordBoard)\r",
											"  \r",
											"   pm.expect((MsgCriteriaPasswordBoard)).to.eql(JSON.parse(responseBody).error[0])\r",
											"})\r",
											"\r",
											"pm.test(\"Field value is correct\", function () {\r",
											"  var jsonData = pm.response.json();\r",
											"  pm.expect(jsonData.error).to.eql([\"O campo 'diretoria' só pode conter letras e o caractere especial '&'.\"]);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"{{BoardCaracterDiferente}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/board/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Validation of the message \"Unable to save this record. Board of Directors already registered in the system.\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											" \r",
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test('Verify message alert', () => {\r",
											"    const MsgAlreadyRegisteredBoard = JSON.parse(responseBody).alert[0]\r",
											"\r",
											"    pm.globals.set(\"MsgAlreadyRegisteredBoard\", MsgAlreadyRegisteredBoard)\r",
											"  \r",
											"   pm.expect((MsgAlreadyRegisteredBoard)).to.eql(JSON.parse(responseBody).alert[0])\r",
											"})\r",
											"\r",
											"pm.test(\"Field value is correct\", function () {\r",
											"  var jsonData = pm.response.json();\r",
											"  pm.expect(jsonData.alert).to.eql([\"Não é possível salvar esse registro. Diretoria já cadastrada no sistema.\"]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"Operações\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/board/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Validation of the message \"Registration successful.\"",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const nomes = [\"Executivooo\", \"Financeirooo\", \"Operacoesss\", \"Marketinggg\", \"Recursos Humanosss\", \"Planejamento Estrategicooo\", \"Relacoes Publicasss\", \"Sutentabilidadeee\", \"Responsabilidade Socialll\", \"Vendasss\", \"Conformidadee\", \"Inovacaooo\", \"Tecnologiaaa\", \"Eticaaa\"];\r",
											"\r",
											"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
											"\r",
											"pm.environment.set(\"BoardName\", pm.variables.replaceIn(nomeRandom))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											" pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify the msg\", function () {\r",
											"   const mensagem = 'Cadastro realizado com sucesso.'\r",
											"   pm.expect(JSON.parse(responseBody).msg).to.equal(mensagem);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"{{BoardName}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/board/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Edit Board of Directors",
					"item": [
						{
							"name": "Update a directorate's data by passing the ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const nomes = [\"ExecutivoII\", \"FinanceiroII\", \"OperacionalII\", \"MarketingII\", \"Recursos HumanosII\", \"Planejamento EstrategicoII\", \"Relacoes PublicasII\", \"SutentabilidadeII\", \"Responsabilidade SocialII\", \"VendasII\", \"ConformidadeII\", \"InovacaoII\", \"TecnologiaaII\", \"EticaII\", \"ContabilidadeII\", \"AdministrativoII\", \"ComercialII\", \"ProducaoII\", \"TecnicoII\", \"CobrancaII\", \"ComprasII\"];\r",
											"\r",
											"\r",
											"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
											"\r",
											"pm.environment.set(\"BoardNameII\", pm.variables.replaceIn(nomeRandom))"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"{{BoardNameII}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/board/{{IdBoard}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board",
										"{{IdBoard}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Search Board of Directors",
					"item": [
						{
							"name": "Show a directory by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/board/{{IdBoard}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board",
										"{{IdBoard}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "List Boards",
					"item": [
						{
							"name": "Board Listing",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/board/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board",
										""
									],
									"query": [
										{
											"key": "boardName",
											"value": "Operações",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Directory listing and provides query search using boardName",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/board/?boardName=Operações",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board",
										""
									],
									"query": [
										{
											"key": "boardName",
											"value": "Operações"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Board Count",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/board/count",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board",
										"count"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Cost Center",
			"item": [
				{
					"name": "Config",
					"item": [
						{
							"name": "Login - Default",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.globals.set(\"Token\", JSON.parse(responseBody).token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"mail\": \"{{MailAdmin}}\",\r\n    \"password\": \"{{PasswordAdmin}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/login/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"login",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "New Cost Center Record",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const nomes = [\"Executivooo\", \"Financeirooo\", \"Operacionalll\", \"Marketinggg\", \"Recursos Humanosss\", \"Planejamento Estrategicooo\", \"Relacoes Publicasss\", \"Sutentabilidadeee\", \"Responsabilidade Socialll\", \"Vendasss\", \"Conformidadeee\", \"Inovacaooo\", \"Tecnologiaaa\", \"Eticaaa\", \"Contabilidadeee\", \"Administrativooo\", \"Comercialll\", \"Producaooo\", \"Tecnicooo\", \"Cobrancaaa\", \"Comprasss\"];\r",
											"\r",
											"\r",
											"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
											"\r",
											"pm.environment.set(\"CostCenterName\", pm.variables.replaceIn(nomeRandom))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"IdCostCenter\", JSON.parse(responseBody).newCostCenter._id);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"  pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify the message\", () => {\r",
											"   pm.environment.set(\"MsgSuccessfulRegistrationBoard\", 'Cadastro realizado com sucesso.')\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"costCenterName\": \"{{CostCenterName}}\",\r\n  \"boardId\": \"{{IdBoard}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/costCenter/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"costCenter",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Include Cost Center",
					"item": [
						{
							"name": "Cost Center Not Filled",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"costCenterName\": \"\",\r\n  \"boardId\": \"{{IdBoard}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/costCenter/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"costCenter",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Capitalized Letters Only Cost Center",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const nomes = [\"EXECUTIVO\", \"FINANCEIRO\", \"OPERACIONAL\", \"MARKETING\", \"RECURSOS HUMANOS\", \"PLANEJAMENTO ESTRATEGICO\", \"RELACOES PUBLICAS\", \"SUSTENTABILIDADE\", \"RESPONSABILIDADE SOCIAL\", \"VENDAS\", \"CONFORMIDADE\", \"INOVACAO\", \"TECNOLOGIA\", \"ETICA\", \"CONTABILIDADE\", \"ADMINISTRATIVO\", \"COMERCIAL\", \"PRODUCAO\", \"TECNICO\", \"COBRANCA\", \"COMPRAS\"];\r",
											"\r",
											"\r",
											"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
											"\r",
											"pm.environment.set(\"COSTCENTERNAMEMAIUSCULA\", pm.variables.replaceIn(nomeRandom))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"costCenterName\": \"{{COSTCENTERNAMEMAIUSCULA}}\",\r\n  \"boardId\": \"{{IdBoard}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/costCenter/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"costCenter",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Lowercase only Cost Center",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const nomes = [\"executivo\", \"financeiro\", \"operacional\", \"marketing\", \"recursos humanos\", \"planejamento estrategico\", \"relacoes publicas\", \"sutentabilidade\", \"responsabilidade social\", \"vendas\", \"conformidade\", \"inovacao\", \"tecnologia\", \"etica\", \"contabilidade\", \"administrativo\", \"comercial\", \"producao\", \"tecnico\", \"cobranca\", \"compras\"];\r",
											"\r",
											"\r",
											"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
											"\r",
											"pm.environment.set(\"costcenternameminuscula\", pm.variables.replaceIn(nomeRandom))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"costCenterName\": \"{{costcenternameminuscula}}\",\r\n  \"boardId\": \"{{IdBoard}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/costCenter/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"costCenter",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Cost Center with Special Character &",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const nomes = [\"& &\", \"&& &\", \"&&& &\", \"&&&& &\", \"&&&&& &\", \"&&&&&& &&\", \"&&&&&&& &\", \"&&&&&&&& &\", \"&&&& &&&&& &\", \"&&&&& &&&&& &\", \"&&&&& &&&&&& &\", \"&&&&&& &&&&&& &\", \"&&&&&& &&&&&&& &\", \"& && &\", \"& &&& &\", \"&& && &\", \"&&& & &\", \"&& & &\", \"&&& && &\", \"&&& &&& &\", \"&& &&& &\"];\r",
											"\r",
											"\r",
											"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
											"\r",
											"pm.environment.set(\"CostCenterNameCaracter&\", pm.variables.replaceIn(nomeRandom))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"costCenterName\": \"{{CostCenterNameCaracter&}}\",\r\n  \"boardId\": \"{{IdBoard}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/costCenter/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"costCenter",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Cost Center with Numbers",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const nomes = [\"12523\", \"45546\", \"78689\", \"123456\", \"234567\", \"345678\", \"456789\", \"01234\", \"04321\", \"54321\", \"654114\", \"254263257\", \"025489\", \"365478\", \"2541365\", \"985471\", \"3254123\", \"8745985\", \"3254125\", \"032145698\", \"2541586\"];\r",
											"\r",
											"\r",
											"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
											"\r",
											"pm.environment.set(\"CostCenterNameNumero\", pm.variables.replaceIn(nomeRandom))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"costCenterName\": \"{{CostCenterNameNumero}}\",\r\n  \"boardId\": \"{{IdBoard}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/costCenter/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"costCenter",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Cost Center with special character other than &",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"const caracteresEspeciais = \"!@#$%^*()_+{}:<>?~`-=[];',./\";\r",
											"let massaDeDados = \"\";\r",
											"for (let i = 0; i < 10; i++) {\r",
											"    massaDeDados += caracteresEspeciais.charAt(Math.floor(Math.random() * caracteresEspeciais.length));\r",
											"}\r",
											"\r",
											"pm.environment.set(\"CostCenterNameCaracterDiferente\", massaDeDados);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"costCenterName\": \"{{CostCenterNameCaracterDiferente}}\",\r\n  \"boardId\": \"{{IdBoard}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/costCenter/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"costCenter",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Cost Center Filled with 50 characters",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const nomes = [\"Ccccccccccccccccccccccccccccccccccccccccccccccccca\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccb\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccd\", \"Ccccccccccccccccccccccccccccccccccccccccccccccccce\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccf\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccg\", \"Ccccccccccccccccccccccccccccccccccccccccccccccccch\", \"Ccccccccccccccccccccccccccccccccccccccccccccccccci\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccj\", \"Ccccccccccccccccccccccccccccccccccccccccccccccccck\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccl\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccm\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccn\", \"Ccccccccccccccccccccccccccccccccccccccccccccccccco\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccp\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccq\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccr\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccs\", \"Ccccccccccccccccccccccccccccccccccccccccccccccccct\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccu\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccv\"];\r",
											"\r",
											"\r",
											"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
											"\r",
											"pm.environment.set(\"CostCenterName50\", pm.variables.replaceIn(nomeRandom))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"costCenterName\": \"{{CostCenterName50}}\",\r\n  \"boardId\": \"{{IdBoard}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/costCenter/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"costCenter",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Cost Center Filled with 51 characters",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const nomes = [\"Cccccccccccccccccccccccccccccccccccccccccccccccccac\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccbc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccdc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccec\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccfc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccgc\", \"Ccccccccccccccccccccccccccccccccccccccccccccccccchc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccic\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccjc\", \"Ccccccccccccccccccccccccccccccccccccccccccccccccckc\", \"Ccccccccccccccccccccccccccccccccccccccccccccccccclc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccmc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccnc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccoc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccpc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccqc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccrc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccsc\", \"Ccccccccccccccccccccccccccccccccccccccccccccccccctc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccuc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccvc\"];\r",
											"\r",
											"\r",
											"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
											"\r",
											"pm.environment.set(\"CostCenterName51\", pm.variables.replaceIn(nomeRandom))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"costCenterName\": \"{{CostCenterName51}}\",\r\n  \"boardId\": \"{{IdBoard}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/costCenter/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"costCenter",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Validation of the message \"The field (nome_campo) is required.\".",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test('Verify message error', () => {\r",
											"    const MsgRequiredCostCenter = JSON.parse(responseBody).error[0]\r",
											"\r",
											"    pm.globals.set(\"MsgRequiredCostCenter\", MsgRequiredCostCenter)\r",
											"  \r",
											"   pm.expect((MsgRequiredCostCenter)).to.eql(JSON.parse(responseBody).error[0])\r",
											"})\r",
											"\r",
											"pm.test(\"Field value is correct\", function () {\r",
											"  var jsonData = pm.response.json();\r",
											"  pm.expect(jsonData.error).to.eql([\"O campo 'centro de custos' é obrigatório.\"]);\r",
											"});\r",
											"\r",
											" "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"costCenterName\": \"\",\r\n  \"boardId\": \"{{IdBoard}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/costCenter/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"costCenter",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Validation of the message \"The Cost Center field can only contain (descrição_caracteres).\"",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const caracteresEspeciais = \"!@#$%^*()_+{}:<>?~`-=[];',./\";\r",
											"let massaDeDados = \"\";\r",
											"for (let i = 0; i < 10; i++) {\r",
											"    massaDeDados += caracteresEspeciais.charAt(Math.floor(Math.random() * caracteresEspeciais.length));\r",
											"}\r",
											"\r",
											"pm.environment.set(\"CostCenterNameCaracterDiferente\", massaDeDados);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test('Verify message error', () => {\r",
											"    const MsgCriteriaPasswordCostCenter = JSON.parse(responseBody).error[0]\r",
											"\r",
											"    pm.globals.set(\"MsgCriteriaPasswordCostCenter\", MsgCriteriaPasswordCostCenter)\r",
											"  \r",
											"   pm.expect((MsgCriteriaPasswordCostCenter)).to.eql(JSON.parse(responseBody).error[0])\r",
											"})\r",
											"\r",
											"pm.test(\"Field value is correct\", function () {\r",
											"  var jsonData = pm.response.json();\r",
											"  pm.expect(jsonData.error).to.eql([\"O campo 'centro de custos' só pode conter letras e o caractere especial '&'.\"]);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"costCenterName\": \"{{CostCenterNameCaracterDiferente}}\",\r\n  \"boardId\": \"{{IdBoard}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/costCenter/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"costCenter",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Validation of the message \"Unable to save this record. Cost Center already registered in the system.\"",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test('Verify message alert', () => {\r",
											"    const MsgAlreadyRegisteredCostCenter = JSON.parse(responseBody).alert[0]\r",
											"\r",
											"    pm.globals.set(\"MsgAlreadyRegisteredCostCenter\", MsgAlreadyRegisteredCostCenter)\r",
											"  \r",
											"   pm.expect((MsgAlreadyRegisteredCostCenter)).to.eql(JSON.parse(responseBody).alert[0])\r",
											"})\r",
											"\r",
											"pm.test(\"Field value is correct\", function () {\r",
											"  var jsonData = pm.response.json();\r",
											"  pm.expect(jsonData.alert).to.eql([\"Não é possível salvar esse registro. Centro de custos já cadastrado no sistema.\"]);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"costCenterName\": \"Financeiro\",\r\n  \"boardId\": \"658048659e210910c5069e24\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/costCenter/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"costCenter",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Validation of the message \"Registration successful.\"",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const nomes = [\"Executivooo\", \"Financeirooo\", \"Operacionalll\", \"Marketinggg\", \"Recursos Humanosss\", \"Planejamento Estrategicooo\", \"Relacoes Publicasss\", \"Sutentabilidadeee\", \"Responsabilidade Socialll\", \"Vendasss\", \"Conformidadeee\", \"Inovacaooo\", \"Tecnologiaaa\", \"Eticaaa\", \"Contabilidadeee\", \"Administrativooo\", \"Comercialll\", \"Producaooo\", \"Tecnicooo\", \"Cobrancaaa\", \"Comprasss\"];\r",
											"\r",
											"\r",
											"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
											"\r",
											"pm.environment.set(\"CostCenterName\", pm.variables.replaceIn(nomeRandom))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify the msg\", function () {\r",
											"   const mensagem = 'Cadastro realizado com sucesso.'\r",
											"   pm.expect(JSON.parse(responseBody).msg).to.equal(mensagem);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"costCenterName\": \"{{CostCenterName}}\",\r\n  \"boardId\": \"{{IdBoard}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/costCenter/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"costCenter",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Edit Cost Center",
					"item": [
						{
							"name": "atualizar um centro de custo passando o id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const nomes = [\"ExecutivoII\", \"FinanceiroII\", \"OperacionalII\", \"MarketingII\", \"Recursos HumanosII\", \"Planejamento EstrategicoII\", \"Relacoes PublicasII\", \"SutentabilidadeII\", \"Responsabilidade SocialII\", \"VendasII\", \"ConformidadeII\", \"InovacaoII\", \"TecnologiaaII\", \"EticaII\", \"ContabilidadeII\", \"AdministrativoII\", \"ComercialII\", \"ProducaoII\", \"TecnicoII\", \"CobrancaII\", \"ComprasII\"];\r",
											"\r",
											"\r",
											"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
											"\r",
											"pm.environment.set(\"CostCenterNameII\", pm.variables.replaceIn(nomeRandom))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"costCenterName\": \"{{CostCenterNameII}}\",\r\n  \"boardId\": \"658048659e210910c5069e24\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/costCenter/{{IdCostCenter}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"costCenter",
										"{{IdCostCenter}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Search Cost Center",
					"item": [
						{
							"name": "mostrar um centro de custo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/costCenter/{{IdCostCenter}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"costCenter",
										"{{IdCostCenter}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "List Cost Center",
					"item": [
						{
							"name": "listagem de centro de custos",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/costCenter/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"costCenter",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "contagem de centro de custos",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/costCenter/count/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"costCenter",
										"count",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Inactivate Cost Center",
					"item": [
						{
							"name": "atualizar o status de um centro de custo passando o id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 202\", function () {\r",
											"    pm.response.to.have.status(202);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"status\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/costCenter/status/{{IdCostCenter}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"costCenter",
										"status",
										"{{IdCostCenter}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Department",
			"item": [
				{
					"name": "Config",
					"item": [
						{
							"name": "Login - Default",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.globals.set(\"Token\", JSON.parse(responseBody).token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"mail\": \"{{MailAdmin}}\",\r\n    \"password\": \"{{PasswordAdmin}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/login/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"login",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "New Department Registration",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const nomes = [\"Executivooo\", \"Financeirooo\", \"Operacionalll\", \"Marketinggg\", \"Recursos Humanosss\", \"Planejamento Estrategicooo\", \"Relacoes Publicasss\", \"Sutentabilidadeee\", \"Responsabilidadeee Social\", \"Vendasss\", \"Conformidadeee\", \"Inovacaooo\", \"Tecnologiaaa\", \"Eticaaa\", \"Contabilidadeee\", \"Administrativooo\", \"Comercialll\", \"Producaooo\", \"Tecnicooo\", \"Cobrancaaa\", \"Comprasss\"];\r",
											"\r",
											"\r",
											"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
											"\r",
											"pm.environment.set(\"DepartmentName\", pm.variables.replaceIn(nomeRandom))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"IdDepartment\", JSON.parse(responseBody).newDepartment._id);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"  pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify the message\", () => {\r",
											"   pm.environment.set(\"MsgSuccessfulRegistrationBoard\", 'Cadastro realizado com sucesso.')\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"{{DepartmentName}}\",\r\n  \"costCenterId\": \"{{IdCostCenter}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/department/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Include department",
					"item": [
						{
							"name": "department Not Filled",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"\",\r\n  \"costCenterId\": \"{{IdCostCenter}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/department/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Capitalized Letters Only department",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const nomes = [\"EXECUTIVOO\", \"FINANCEIROO\", \"OPERACIONALL\", \"MARKETINGG\", \"RECURSOS HUMANOSS\", \"PLANEJAMENTO ESTRATEGICOO\", \"RELACOES PUBLICASS\", \"SUSTENTABILIDADEE\", \"RESPONSABILIDADE SOCIALL\", \"VENDASS\", \"CONFORMIDADEE\", \"INOVACAOO\", \"TECNOLOGIAA\", \"ETICAA\", \"CONTABILIDADEE\", \"ADMINISTRATIVOO\", \"COMERCIALL\", \"PRODUCAOO\", \"TECNICOO\", \"COBRANCAA\", \"COMPRASS\"];\r",
											"\r",
											"\r",
											"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
											"\r",
											"pm.environment.set(\"DEPARTMENTNAMEMAIUSCULA\", pm.variables.replaceIn(nomeRandom))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"IdDepartment\", JSON.parse(responseBody).newDepartment._id);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"{{DEPARTMENTNAMEMAIUSCULA}}\",\r\n  \"costCenterId\": \"{{IdCostCenter}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/department/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Lowercase only department",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const nomes = [\"executivo\", \"financeiro\", \"operacional\", \"marketing\", \"recursos humanos\", \"planejamento estrategico\", \"relacoes publicas\", \"sutentabilidade\", \"responsabilidade social\", \"vendas\", \"conformidade\", \"inovacao\", \"tecnologia\", \"etica\", \"contabilidade\", \"administrativo\", \"comercial\", \"producao\", \"tecnico\", \"cobranca\", \"compras\"];\r",
											"\r",
											"\r",
											"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
											"\r",
											"pm.environment.set(\"departmentnameminuscula\", pm.variables.replaceIn(nomeRandom))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"IdDepartment\", JSON.parse(responseBody).newDepartment._id);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"{{departmentnameminuscula}}\",\r\n  \"costCenterId\": \"{{IdCostCenter}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/department/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "department with Special Character &",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const nomes = [\"&\", \"&&\", \"&&&\", \"&&&&\", \"&&&&&\", \"&&&&&&\", \"&&&&&&&\", \"&&&&&&&&\", \"&&&& &&&&&\", \"&&&&& &&&&&\", \"&&&&& &&&&&&\", \"&&&&&& &&&&&&\", \"&&&&&& &&&&&&&\", \"& &&\", \"& &&&\", \"&& &&\", \"&&& &\", \"&& &\", \"&&& &&\", \"&&& &&&\", \"&& &&&\"];\r",
											"\r",
											"\r",
											"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
											"\r",
											"pm.environment.set(\"DepartmentNameCaracter&\", pm.variables.replaceIn(nomeRandom))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"IdDepartment\", JSON.parse(responseBody).newDepartment._id);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"{{DepartmentNameCaracter&}}\",\r\n  \"costCenterId\": \"{{IdCostCenter}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/department/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "department with Numbers",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const nomes = [\"12523\", \"45546\", \"78689\", \"123456\", \"234567\", \"345678\", \"456789\", \"01234\", \"04321\", \"54321\", \"654114\", \"254263257\", \"025489\", \"365478\", \"2541365\", \"985471\", \"3254123\", \"8745985\", \"3254125\", \"032145698\", \"2541586\"];\r",
											"\r",
											"\r",
											"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
											"\r",
											"pm.environment.set(\"DepartmentNameNumero\", pm.variables.replaceIn(nomeRandom))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"{{DepartmentNameNumero}}\",\r\n  \"costCenterId\": \"{{IdCostCenter}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/department/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "department with special character other than &",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const caracteresEspeciais = \"!@#$%^*()_+{}:<>?~`-=[];',./\";\r",
											"let massaDeDados = \"\";\r",
											"for (let i = 0; i < 10; i++) {\r",
											"    massaDeDados += caracteresEspeciais.charAt(Math.floor(Math.random() * caracteresEspeciais.length));\r",
											"}\r",
											"\r",
											"pm.environment.set(\"DepartmentNameCaracterDiferente\", massaDeDados);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"-----\",\r\n  \"costCenterId\": \"{{IdCostCenter}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/department/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "department Filled with 50 characters",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const nomes = [\"Ccccccccccccccccccccccccccccccccccccccccccccccccca\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccb\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccd\", \"Ccccccccccccccccccccccccccccccccccccccccccccccccce\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccf\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccg\", \"Ccccccccccccccccccccccccccccccccccccccccccccccccch\", \"Ccccccccccccccccccccccccccccccccccccccccccccccccci\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccj\", \"Ccccccccccccccccccccccccccccccccccccccccccccccccck\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccl\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccm\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccn\", \"Ccccccccccccccccccccccccccccccccccccccccccccccccco\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccp\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccq\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccr\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccs\", \"Ccccccccccccccccccccccccccccccccccccccccccccccccct\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccu\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccv\"];\r",
											"\r",
											"\r",
											"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
											"\r",
											"pm.environment.set(\"DepartmentName50\", pm.variables.replaceIn(nomeRandom))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"{{DepartmentName50}}\",\r\n  \"costCenterId\": \"{{IdCostCenter}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/department/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "department Filled with 51 characters",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const nomes = [\"Cccccccccccccccccccccccccccccccccccccccccccccccccac\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccbc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccdc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccec\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccfc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccgc\", \"Ccccccccccccccccccccccccccccccccccccccccccccccccchc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccic\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccjc\", \"Ccccccccccccccccccccccccccccccccccccccccccccccccckc\", \"Ccccccccccccccccccccccccccccccccccccccccccccccccclc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccmc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccnc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccoc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccpc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccqc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccrc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccsc\", \"Ccccccccccccccccccccccccccccccccccccccccccccccccctc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccuc\", \"Cccccccccccccccccccccccccccccccccccccccccccccccccvc\"];\r",
											"\r",
											"\r",
											"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
											"\r",
											"pm.environment.set(\"DepartmentName51\", pm.variables.replaceIn(nomeRandom))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"{{DepartmentName51}}\",\r\n  \"costCenterId\": \"{{IdCostCenter}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/department/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Fill in department field with name already registered -",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"Tecnico\",\r\n  \"costCenterId\": \"6580f93a9e210910c506a281\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/department/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Validation of the message \"The Department field is required.\".",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test('Verify message error', () => {\r",
											"    const MsgRequiredDepartment = JSON.parse(responseBody).error[0]\r",
											"\r",
											"    pm.globals.set(\"MsgRequiredDepartment\", MsgRequiredDepartment)\r",
											"  \r",
											"   pm.expect((MsgRequiredDepartment)).to.eql(JSON.parse(responseBody).error[0])\r",
											"})\r",
											"\r",
											"pm.test(\"Field value is correct\", function () {\r",
											"  var jsonData = pm.response.json();\r",
											"  pm.expect(jsonData.error).to.eql([\"O campo Departamento é obrigatório.\"]);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"\",\r\n  \"costCenterId\": \"{{IdCostCenter}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/department/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Validation of the message \"The Department field can only contain (descrição_caracteres).\"",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const caracteresEspeciais = \"!@#$%^*()_+{}:<>?~`-=[];',./\";\r",
											"let massaDeDados = \"\";\r",
											"for (let i = 0; i < 10; i++) {\r",
											"    massaDeDados += caracteresEspeciais.charAt(Math.floor(Math.random() * caracteresEspeciais.length));\r",
											"}\r",
											"\r",
											"pm.environment.set(\"DepartmentNameCaracterDiferente\", massaDeDados);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test('Verify message error', () => {\r",
											"    const MsgCriteriaPasswordDepartment = JSON.parse(responseBody).error[0]\r",
											"\r",
											"    pm.globals.set(\"MsgCriteriaPasswordDepartment\", MsgCriteriaPasswordDepartment)\r",
											"  \r",
											"   pm.expect((MsgCriteriaPasswordDepartment)).to.eql(JSON.parse(responseBody).error[0])\r",
											"})\r",
											"\r",
											"pm.test(\"Field value is correct\", function () {\r",
											"  var jsonData = pm.response.json();\r",
											"  pm.expect(jsonData.error).to.eql([\"O campo Departamento só pode conter letras e o caractere especial '&'.\"]);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"{{DepartmentNameCaracterDiferente}}\",\r\n  \"costCenterId\": \"{{IdCostCenter}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/department/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Validation of the message \"Unable to save this record. Department already registered in the system.\"",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"  pm.test('Verify message alert', () => {\r",
											"    const MsgAlreadyRegisteredDepartment = JSON.parse(responseBody).alert[0]\r",
											"\r",
											"    pm.globals.set(\"MsgAlreadyRegisteredDepartment\", MsgAlreadyRegisteredDepartment)\r",
											"  \r",
											"   pm.expect((MsgAlreadyRegisteredDepartment)).to.eql(JSON.parse(responseBody).alert[0])\r",
											"})\r",
											"\r",
											"pm.test(\"Field value is correct\", function () {\r",
											"  var jsonData = pm.response.json();\r",
											"  pm.expect(jsonData.alert).to.eql([\"Não é possível salvar esse registro. Departamento já cadastrado no sistema.\"]);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"Tecnico\",\r\n  \"costCenterId\": \"6580f93a9e210910c506a281\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/department/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Validation of the message \"Registration successful.\"",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const nomes = [\"Executivooo\", \"Financeirooo\", \"Operacionalll\", \"Marketinggg\", \"Recursos Humanosss\", \"Planejamento Estrategicooo\", \"Relacoes Publicasss\", \"Sutentabilidadeee\", \"Responsabilidadeee Social\", \"Vendasss\", \"Conformidadeee\", \"Inovacaooo\", \"Tecnologiaaa\", \"Eticaaa\", \"Contabilidadeee\", \"Administrativooo\", \"Comercialll\", \"Producaooo\", \"Tecnicooo\", \"Cobrancaaa\", \"Comprasss\"];\r",
											"\r",
											"\r",
											"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
											"\r",
											"pm.environment.set(\"DepartmentName\", pm.variables.replaceIn(nomeRandom))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify the msg\", function () {\r",
											"   const mensagem = 'Cadastro realizado com sucesso.'\r",
											"   pm.expect(JSON.parse(responseBody).msg).to.equal(mensagem);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"{{DepartmentName}}\",\r\n  \"costCenterId\": \"{{IdCostCenter}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/department/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Edit Department",
					"item": [
						{
							"name": "atualizar um departamento passando o id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const nomes = [\"ExecutivoII\", \"FinanceiroII\", \"OperacionalII\", \"MarketingII\", \"Recursos HumanosII\", \"Planejamento EstrategicoII\", \"Relacoes PublicasII\", \"SutentabilidadeII\", \"Responsabilidade SocialII\", \"VendasII\", \"ConformidadeII\", \"InovacaoII\", \"TecnologiaII\", \"EticaII\", \"ContabilidadeII\", \"AdministrativoII\", \"ComercialII\", \"ProducaoII\", \"TecnicoII\", \"CobrancaII\", \"ComprasII\"];\r",
											"\r",
											"\r",
											"const nomeRandom = nomes[Math.floor(Math.random() * nomes.length)];\r",
											"\r",
											"pm.environment.set(\"DepartmentNameII\", pm.variables.replaceIn(nomeRandom))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"{{DepartmentNameII}}\",\r\n  \"costCenterId\": \"6581c15c9e210910c506a319\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/department/{{IdDepartment}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										"{{IdDepartment}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Search Department",
					"item": [
						{
							"name": "mostrar um departamento",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/department/{{IdDepartment}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										"{{IdDepartment}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "List department",
					"item": [
						{
							"name": "listagem de departamentos",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/department/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "contagem de departamentos",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/department/count/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										"count",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Inactivate department",
					"item": [
						{
							"name": "atualizar o status de um departamento passando o id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 202\", function () {\r",
											"    pm.response.to.have.status(202);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"status\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/department/status/{{IdDepartment}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										"status",
										"{{IdDepartment}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "{{Token}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "token",
				"type": "string"
			},
			{
				"key": "in",
				"value": "query",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}